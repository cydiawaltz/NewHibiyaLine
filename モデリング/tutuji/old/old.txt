BveTs Map 2.02
Signal.Load('Signals.csv');
Sound.Load('Sound.txt');
Sound3D.Load('Sounds3D.txt');
Light.Direction(80, 100);
Signal.SpeedLimit(0,25,45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,);
$base = 0;
$base + 0;
	Curve.Gauge(1.067);
$base + 050;
	Background.Change('bg0');
	Adhesion.Change(0.35, 0, 0.01);
	Irregularity.Change(0.001267914, 0.0007924465, 0.0004992413, 50, 50, 50);
		Section.BeginNew(0, 10, 16);
	Beacon.Put(10, 0, 5);
				RollingNoise.Change(0);
	//TESTs
	$base + 300;
	$base + 1500;
$base + 0100;
	Curve.Begin(600, 0.03);
	$base + 0125;
$base + 0100;
	$base + 0125;
	//$base + 0100;
	$base + 0125;
	$base + 0150;
	Gradient.Begin(-10);
	Curve.End();
	$base + 0125;
	$base + 0150;
			$base + 0175;
			$base + 0200;
			$base + 0225;
	$base + 0200;
	JointNoise.Play(0);
$base + 225;
		$base + 250;
	Gradient.Begin(-20);
	Curve.Begin(300, 0.04);
	// 7
	Section.BeginNew(0, 10, 17);
	//		$base + 275;
	$base + 300;
	Gradient.Begin(-33);
	Curve.End();
	$base + 325;
	Curve.Begin(-800, -0.02);
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
		$base + 275;
$base + 310;
$base + 325;
$base + 350;
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
		$base + 370;
$base + 250;
	$base + 375;
	// 6
	Section.BeginNew(0, 10, 25);
		$base + 275;
	$base + 400;
		$base + 300;
	$base + 405;
$base + 400;
$base + 425;
		$base + 420;
$base + 425;
$base + 325;
	$base + 450;
		$base + 440;
$base + 455;
$base + 350;
	$base + 475;
		$base + 375;
	$base + 460;
$base + 500;
	Gradient.Begin(-15);
	// 5
	Section.BeginNew(0, 10, 25);
		$base + 400;
	$base + 490;
$base + 525;
	Gradient.Begin(-7);
		$base + 425;
	$base + 530;
$base + 550;
	Gradient.Begin(4);
	Curve.End();
					RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 450;
	
$base + 540;
$base + 575;
		$base + 570;
$base + 600;
		$base + 590;
$base + 625;
	$base + 655;
$base + 610;
$base + 650;
	// 東町架動橋
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
	$base + 650;
$base + 625;
	$base + 650;
	$base + 675;
	// 東町架動橋終
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 720;
	$base + 725;
$base + 659;
$base + 725;
	$base + 750;
	$base + 655;
$base + 775;
	$base + 715;
$base + 725;
$base + 800;
	// 橋
	Gradient.Begin(-14);
			// .rail 8;;-6
$base + 805;
	// 4
$base + 800;
$base + 805;
	Section.BeginNew(0, 10, 26);
$base + 805;
	Beacon.Put(7, 0, 1);
$base + 803;
$base + 807;
$base +760;
$base + 825;
	Curve.Begin(1000, 0.015);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 810;
$base + 850;
	Curve.End();
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 875;
	Gradient.Begin(-5);
$base + 900;
	Gradient.Begin(3);
	$base + 905;
$base + 925;
	// .pitch 24
	Gradient.Begin(12);
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
$base + 900;
$base + 950;
	Gradient.Begin(24);
	Curve.Begin(-1000, -0.015);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 975;
	Curve.End();
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 935;
$base + 960;
$base + 980;
$base + 1010;
	// 橋（終）
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
$base +1000;
$base + 1050;
$base + 1055;
	// 3
$base + 1050;
$base + 1055;
	Section.BeginNew(0, 10, 25);
$base + 1060;
$base + 1070;
$base + 1075;
	Gradient.Begin(8);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1070;
$base + 1100;
	$base + 1105;
$base + 1140;
$base + 1175;
$base + 1200;
	Curve.Begin(-800, -0.02);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1175;
	$base + 1200;
	$base + 1175;
	$base + 1200;
	$base + 1120;
$base + 1200;
$base + 1245;
		// 2
$base + 1225;
$base + 1245;
	Section.BeginNew(0, 10, 24);
$base + 1225;
$base + 1245;
	Beacon.Put(7, 0, 0);
$base + 1225;
$base + 1220;
	$base + 1245;
	$base + 1220;
	$base + 1245;
	$base + 1250;
	Gradient.Begin(0);
	Curve.End();
		RollingNoise.Change(3);
	FlangeNoise.Change(0);
			// .railend 8
$base + 1230;
$base + 1350;
$base + 1375;
	$base + 1400;
	Gradient.Begin(-9);
	Curve.Begin(1000, 0.015);
		RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1425;
	Curve.Begin(700, 0.025);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1400;
	$base + 1425;
		$base + 1450;
	Gradient.Begin(0);
	Curve.Begin(1000, 0.015);
			RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 1475;
	Curve.End();
	// 1
	Section.BeginNew(0, 10, 24);
	Beacon.Put(7, 0, 1);
			RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 1500;
			$base + 1525;
			$base + 1550;
			$base + 1575;
			$base + 1600;
	Curve.Begin(800, 0.02);
			RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 1625;
	Gradient.Begin(5);
			$base + 1600;
	$base + 1625;
	$base + 1650;
					$base + 1675;
	Gradient.Begin(10);
	Curve.End();
	// 1場（信）
	Section.BeginNew(0, 10, 21);
		RollingNoise.Change(0);
	FlangeNoise.Change(0);
		$base + 1700;
		$base + 1725;
	Gradient.Begin(2);
		$base + 1750;
	$base + 1775;
		$base + 1750;
	JointNoise.Play(0);
$base + 1775;
		$base + 1787.5;
	$base + 1800;
	// 2場（信）
	// .freeobj 0;42
	Section.BeginNew(0, 10, 18);
	Beacon.Put(7, 0, 0);
		$base + 1812.5;
	$base +1825;
		$base + 1822;
$base + 1775;
	JointNoise.Play(0);
$base + 1800;
	$base + 1775;
	JointNoise.Play(0);
$base + 1820;
$base + 1825;
	Curve.Begin(500, 0.04);
			RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1850;
	Curve.Begin(300, 0.07);
			RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1875;
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
$base + 1900;
	Gradient.Begin(0);
	Curve.Begin(500, 0.04);
$base + 1925;
	Curve.End();
	// 3場（信）
	Section.BeginNew(0, 10, 18);
$base + 1900;
	
$base + 1925;
			RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 1950;
	$base + 1945;
$base + 1946;
$base + 1925;
	JointNoise.Play(0);
$base + 1950;
	$base + 1975;
		Beacon.Put(10, 0, 6);
		$base + 1950;
	JointNoise.Play(0);
$base + 1975;
	RollingNoise.Change(1);
	FlangeNoise.Change(0);
$base + 1994;
	// .freeobj 1;120;;;
$base + 1975;
$base + 2025;

$base + 2050;
	Sound['1_l'].Play();
	
$base + 2065;
	Beacon.Put(6, 1, 0);
$base + 2070;
	Beacon.Put(6, 1, 0);
$base + 2075;
	Gradient.Begin(2);
	Curve.Begin(500, 0.015);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
	Beacon.Put(6, 1, 0);
$base + 2080;
	Beacon.Put(6, 1, 0);
$base + 2085;
	Beacon.Put(6, 1, 0);
$base + 2090;
	Beacon.Put(6, 1, 0);
$base + 2100;
	Curve.Begin(300, 0.03);
	RollingNoise.Change(1);
	FlangeNoise.Change(0);
$base + 2104;
	// .freeobj 1;120;;;180
$base + 2100;
$base + 2109;
	Beacon.Put(17, 0, 0);
$base + 2120;
$base + 2100;
$base + 2125;
	Sound['1_miwa'].Play();
	Curve.Begin(164, 0.05);
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
$base + 2100;
	$base + 2125;
	$base + 2148;
$base + 2130;
$base + 2155;
$base + 2150;
	Curve.Begin(300, 0.03);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 2175;
	Curve.End();
	// 6
	Section.BeginNew(0, 10, 18);
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
	$base + 2200;
	Curve.Begin(500, 0.015);
	$base + 2225;
	Gradient.Begin(-15);
	Curve.Begin(300, 0.03);
		// 5
	Section.BeginNew(0, 10, 18);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 2250;
	Gradient.Begin(-39);
	Curve.Begin(171, 0.055);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
	$base + 2275;
	$base + 2300;
	$base + 2275;
	$base + 2300;
	$base + 2325;
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
		$base + 2350;
	Curve.Begin(300, 0.03);
	RollingNoise.Change(0);
	FlangeNoise.Change(0);
		$base + 2375;
	Curve.End();
	RollingNoise.Change(3);
	FlangeNoise.Change(0);
$base + 2400;
$base + 2375;
	$base + 2400;
		RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 2375;
	$base + 2400;
	$base + 2410;
	// 4
$base + 2400;
$base + 2410;
	Section.BeginNew(0, 10, 18);
$base + 2400;
$base + 2425;
		$base + 2400;
	$base + 2425;
	$base + 2450;
				$base + 2425;
	$base + 2450;
	$base + 2475;
	Curve.Begin(-500, -0.02);
					RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 2500;
				$base + 2525;
	Curve.Begin(-300, -0.03);
	// 3
	Section.BeginNew(0, 10, 18);
					RollingNoise.Change(0);
	FlangeNoise.Change(0);
$base + 2550;
$base + 2550;
$base + 2549;
	CabIlluminance.Set(1);
$base + 2550;
	// 坑口 2560
	Curve.Begin(-160, -0.05);
		CabIlluminance.Set(0.1953125);
	$base + 2525;
	$base + 2550;
		RollingNoise.Change(7);
	FlangeNoise.Change(0);
			Background.Change('');
	$base + 2560;
	Sound3D['keiho'].Put(1.5, 1.3);
$base + 2600;
	Curve.Begin(-300, -0.03);
$base + 2575;
	$base + 2600;
		RollingNoise.Change(7);
	FlangeNoise.Change(0);
$base + 2575;
	$base + 2600;
	$base + 2613;
	//CabIlluminance.Set(0.1953125);
	//CabIlluminance.Set(0.390625);
$base + 2625;
	Gradient.Begin(-30);
	Curve.Begin(-500, -0.02);
	// 2
	Section.BeginNew(0, 10, 18);
	RollingNoise.Change(2);
	FlangeNoise.Change(0);
$base + 2650;
	Gradient.Begin(-15);
	Curve.End();
	RollingNoise.Change(2);
	FlangeNoise.Change(0);
$base + 2675;
	Gradient.Begin(-5);
	Curve.Begin(-800, -0.015);
	RollingNoise.Change(2);
	FlangeNoise.Change(0);
$base + 2700;
	Gradient.Begin(2);
	Curve.Begin(-600, -0.02);
	RollingNoise.Change(2);
	FlangeNoise.Change(0);
$base + 2720;
	// 1
$base + 2700;
$base + 2720;
	Section.BeginNew(0, 10, 18);
$base + 2700;
$base + 2720;
	CabIlluminance.Set(0.1953125);
$base + 2723;
	Beacon.Put(10, 0, 7);
	CabIlluminance.Set(0.78125);
	RollingNoise.Change(1);
	FlangeNoise.Change(0);
	repeater['slabB'].Begin0(2,3,5,5,'slab2');
	repeater['wall'].End();
	repeater['minowawall'].Begin(0,-3.8,,0,0,0,0,3,3,3,'minowa2','minowa1','minowa2');
	repeater['form-hidari'].Begin(0,-4.2,0,0,0,0,0,3,0,1.65,'form-hidari');
	repeater['yuka1'].Begin(0,-4.2,0,0,0,0,0,3,0,1.75,'yuka1');
	repeater['yuka2'].Begin(0,-5.7,,,,,,3,3,1.75,'yuka1');
	#repeater['underhome'].Begin(0,-1,5,-5,,,,,3,3,3,'underHome');
	repeater['MinowaTenjo'].Begin(0,1.2,0.27,0,0,0,0,3,3,3,'MinowaTenjo');
	repeater['MinowaTenHa'].Begin(0,,0.27,0,0,0,0,3,3,3,'MinowaTenjo');
	repeater['HomeLight'].Begin(0,-1.8,0.4,0,0,0,0,3,1.5,1.5,'HomeLight');
	repeater['wallB'].End();
	repeater['minowawall2'].Begin(2,3.8,,,0,180,0,3,3,3,'minowa2','minowa1','minowa2');
	repeater['form-migi'].Begin(2,0,0,0,0,0,0,3,1.6,1.6,'form-migi');
	repeater['yuka12'].Begin(2,2.7,0,0,0,0,0,3,0,1.75,'yuka1');
	repeater['yuka22'].Begin(2,4,,,,,,3,3,1.75,'yuka1');
	#repeater['underhome'].Begin(0,-1,5,-5,,,,,3,3,3,'underHome');
	repeater['MinowaTenjo2'].Begin(2,-1.3,0.27,0,0,180,0,3,3,3,'MinowaTenjo');
	repeater['MinowaTenHa2'].Begin(2,7,0.27,0,0,0,0,3,3,3,'MinowaTenjo');
	repeater['HomeLight2'].Begin(2,1.7,0.4,0,0,180,0,3,1.5,1.5,'HomeLight');
	repeater['HomeUe'].Begin(0,2.5,5.7,0,0,180,180,3,10,10,'HomeUe');
	repeater['dike'].Begin(0,0,0,0,0,0,0,3,25,25,'dike');
	repeater['slabA'].Begin0(0,3,5,5,'slab');
	#repeater['HomeUe'].Begin(2,0,0,0,0,0,0,3,25,25,'HomeUe');
$base + 2740;
	Structure['kuon'].Put(0,-6.5,-0.5,0,0,0,0,0,0);
	Structure['TBC'].Put(0,-6.5,-0.5,1.5,0,0,0,0,0);
	Structure['Jihanki'].Put(0,-6.5,-0.7,1,0,0,0,0,0);
$base + 2750;
	Structure['corona'].Put(0,-6.5,-0.5,0,0,0,0,0,0);
	Structure['ToMe'].Put(0,-6.5,-0.5,1.5,0,0,0,0,0);
$base + 2757;
	Structure['Shitugaiki'].Put(0,-5,-0.5,0,0,-90,0,0,0);
$base + 2761;
	Structure['IEdeyarou'].Put(0,-6.5,,0,0,0,0,0,0);
$base + 2768;
	Structure['YatteMotor'].Put(0,-6.5,-0.5,-0.5,0,0,0,0,0);
	Structure['kuon'].Put(0,-6.5,-0.5,1.5,0,0,0,0,0);
$base + 2775;
	Structure['shortstory1'].Put(0,-6.5,-0.45,-0.3,0,0,0,0,0);
	Structure['EN'].Put(0,-6.57,-0.45,1.2,0,0,0,0,0);
	Structure['Tosei'].Put(0,-6.55,-0.45,2.5,0,0,0,0,0);
	Structure['Shitugaiki'].Put(0,-5,-0.5,2.8,0,-90,0,0,0);
$base + 2783;
	Structure['kuon'].Put(0,-6.5,-0.42,0,0,0,0,0,0);
	Structure['TBC'].Put(0,-6.5,-0.42,1.5,0,0,0,0,0);
	Structure['TBC'].Put(0,-6.5,-0.42,2.7,0,0,0,0,0);
	Structure['Jihanki'].Put(0,-6.5,-0.7,2.5,0,0,0,0,0);
$base + 2793;
	Structure['TH'].Put(0,-6.5,-0.5,-0.2,0,0,0,0,0);
	Structure['Sumaho'].Put(0,-6.5,-0.3,1.5,0,0,0,0,0);
	Structure['ShortStory2'].Put(0,-6.5,-0.42,2.8,0,0,0,0,0);
	Structure['IEdeyarou'].Put(0,-6.5,-0.42,4,0,0,0,0,0);
$base + 2800;
	Structure['Shitugaiki'].Put(0,-5,-0.5,2,0,-90,0,0,0);
	Structure['corona'].Put(0,-6.5,-0.42,5.5,0,0,0,0,0);
$base + 2810;
	Structure['EN'].Put(0,-6.57,-0.45,1.2,0,0,0,0,0);
	Structure['shortstory1'].Put(0,-6.5,-0.42,5.5,0,0,0,0,0);
$base + 2820;
	Structure['kuon'].Put(0,-6.5,-0.5,0,0,0,0,0,0);
	Structure['TBC'].Put(0,-6.5,-0.5,1.5,0,0,0,0,0);
	Structure['Jihanki'].Put(0,-6.5,-0.7,1,0,0,0,0,0);
$base + 2859;
	Beacon.Put(17, 0, 0);
$base + 2850;
	repeater['minodike'].Begin(0,-0.5,0,8,0,0,0,3,25,25,'minodike');
	repeater['dike'].End();
$base + 2827;
Structure['Shitugaiki'].Put(0,-5,-0.5,2,0,-90,0,0,0);
	Structure['corona'].Put(0,-6.5,-0.42,5.5,0,0,0,0,0);
$base + 2837;
	Structure['TH'].Put(0,-6.5,-0.5,-0.2,0,0,0,0,0);
	Structure['Sumaho'].Put(0,-6.5,-0.3,1.5,0,0,0,0,0);
	Structure['ShortStory2'].Put(0,-6.5,-0.42,2.8,0,0,0,0,0);
	Structure['IEdeyarou'].Put(0,-6.5,-0.42,4,0,0,0,0,0);
$base + 2846;
	Structure['shortstory1'].Put(0,-6.5,-0.45,-0.3,0,0,0,0,0);
	Structure['EN'].Put(0,-6.57,-0.45,1.2,0,0,0,0,0);
	Structure['Tosei'].Put(0,-6.55,-0.45,2.5,0,0,0,0,0);
	Structure['Shitugaiki'].Put(0,-5,-0.5,2.8,0,-90,0,0,0);
$base + 2850;
Structure['kuon'].Put(0,-6.5,-0.5,0,0,0,0,0,0);
	Structure['TBC'].Put(0,-6.5,-0.5,1.5,0,0,0,0,0);
	Structure['Jihanki'].Put(0,-6.5,-0.7,1,0,0,0,0,0);
$base + 2870;
	Station['sta2'].Put(-1, -5, 5);
	CabIlluminance.Set(0.78125);
	repeater['minodike'].End();
$base + 2880;
	repeater['wall'].Begin(0,-1,0,0,0,0,0,3,5,5,'wall5','wall5','wall5','wall4');
	repeater['form-hidari'].End();
	repeater['yuka1'].End();
	repeater['yuka2'].End();
	repeater['MinowaTenjo'].End();
	repeater['MinowaTenHa'].End();
	repeater['HomeLight'].End();
	repeater['form-migi'].End();
	repeater['yuka12'].End();
	repeater['yuka22'].End();
	repeater['MinowaTenjo2'].End();
	repeater['MinowaTenHa2'].End();
	repeater['HomeLight2'].End();
	repeater['minowawall2'].End();
	repeater['HomeUe'].End();
	repeater['slabA'].End();
$base + 2890;
	repeater['dike'].Begin(0,-0.2,0,0,0,0,0,3,10,10,'dikeL');
	repeater['wallB'].Begin(2,1,0,0,0,180,0,3,5,5,'wall5','wall5','wall5','wall4');
$base + 2900;
	repeater['minowawall'].End();
	CabIlluminance.Set(0.1953125);
//VScodeなら^\d(.*)、$base + $0で正規表現利用