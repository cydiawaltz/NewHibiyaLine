BveTs Map 2.02

//Structure.Load('../structures/StructureList.txt');

$a = 5220;
//curve
11600-$a;
Track[2].Position(5,0);
Curve.BeginTransition();
11620-$a;
Curve.Begin(800,0);
11645-$a;
Curve.End();
11875-$a;
//Gradient
11434-$a;
Gradient.BeginTransition();
11484-$a;
Gradient.Begin(-2);
11555-$a;
Gradient.BeginTransition();
11605-$a;
Gradient.Begin(-10);
12000-$a;
repeater['dike'].End();
11990-$a;
Repeater['AB_ballast'].Begin('AB', 0, -0.1, 0, 0, 0, 0, 3, 5, 5, 'Rail3_2','Rail3_3','Rail3_1');
Repeater['BA_ballast'].Begin('BA', 0, -0.1, 0, 0, 0, 0, 3, 5, 5, 'Rail3_2','Rail3_3','Rail3_1');
Track[2].Position(5,0);
//Structure
//停止目標:12200
12049-$a;
CabIlluminance.Set(0.1);
12050-$a;
Repeater['AB_ballast'].End();
Repeater['BA_ballast'].end();
repeater['wallA1'].end();
repeater['wallB1'].end();
repeater['dike'].Begin(0,1.4,0, 0, 0, 0, 0, 1, 15, 15, '202_3');
Repeater['6bansen_ballast'].Begin('6bansen', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail2');
Repeater['5bansen_ballast'].Begin('2', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail2');
CabIlluminance.Set(0.7);
repeater['wall'].End();
repeater['wallB'].End();
repeater['NingyoWallA'].Begin(0,-5,-0.1,0,0,0,0,3,4,4,'ningyowall1','ningyowall2','ningyowall2');
repeater['NingyoTenjoA'].Begin(0,-3.4,-0.1,0,0,0,0,3,6,6,'ningyotenjo');
repeater['lightA'].Begin(0,-6.3,,-10,0,0,0,3,3,3,'light');
repeater['ningyoyukaA'].Begin(0,-4,-0.1,0,0,0,0,3,5,5.3,'ningyoyuka');
repeater['form-hidari'].Begin(0,-4.3,0,0,0,0,0,3,1.65,1.65,'form-hidari');
repeater['NingyoWallB'].Begin(2,5.2,-0.1,0,0,180,0,3,4,4,'ningyowall1','ningyowall2','ningyowall2');
repeater['NingyoTenjoB'].Begin(2,3.4,-0.1,0,0,180,0,3,6,6,'ningyotenjo');
repeater['lightB'].Begin(2,-1,0,-10,0,0,0,3,3,3,'light');
repeater['ningyoyukaB'].Begin(2,4,-0.1,0,0,0,0,3,5,5.3,'ningyoyuka');
repeater['form-hidariB'].Begin(2,4.3,0,0,0,180,0,3,1.65,1.65,'form-hidari');
12100-$a;
structure['cakeshop'].Put(2,3,0,0,0,0,0,3,10);
12100-$a;
Structure['03_1'].Put(0,0,0,0,0,0,0,3,0);
Structure['70000-1'].Put(2,-0.2,0,0,0,0,0,3,0);
12200-$a;
structure['kaidan1'].Put(0,-4.05,0,8,0,0,0,3,10);
12205-$a;
structure['kaidanwall1'].Put(0,-4.8,0,3,0,0,0,3,10);
structure['kaidan1'].Put(2,4.37,0,3,0,0,0,3,10);
structure['kaidanwall1'].Put(2,5.1,0,3,0,180,0,3,10);
repeater['NingyoWallA'].End();
repeater['NingyoTenjoA'].End();
repeater['lightA'].End();
repeater['ningyoyukaA'].End();
repeater['form-hidari'].End();
repeater['NingyoWallB'].End();
repeater['NingyoTenjoB'].End();
repeater['lightB'].End();
repeater['ningyoyukaB'].End();
repeater['form-hidariB'].End();
Repeater['6bansen_ballast'].Begin('6bansen', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail3_2','Rail3_3','Rail3_1');
Repeater['5bansen_ballast'].Begin('2', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail3_2','Rail3_3','Rail3_1');
repeater['dike'].Begin(0,1.4,0, 0, 0, 0, 0, 1, 15, 15, '202_3');
Repeater['wallA1'].Begin(0, -1.83, 0.01, 0, 0, 0, 0, 1, 14.8, 14.8, '103L');
Repeater['tenjo105'].Begin(0, -1.83, 0.01, 0, 0, 0, 0, 1, 15, 15, '105L');
Repeater['tenjo106'].Begin(0, -2, 0.01, 0, 0, 0, 0, 1, 15, 15, '106');
Repeater['wallB1'].Begin('2', 1.83, 0.01, 0, 0, 0, 0, 1, 15, 15, '103R');


12220-$a;
Curve.BeginTransition();
CabIlluminance.Set(0.7);
12208-$a;
CabIlluminance.Set(0.1);
12250-$a;
repeater['dike'].Begin0(0,3,10,10,'dikeL');
12225-$a;
Curve.Begin(130,0.08);
12269-$a;
Gradient.Begin(-4);
12350-$a;
Curve.Begin(250,0.05);
12470-$a;
Curve.Begin(163,0.08);
Gradient.Begin(3);
12510-$a;
Curve.End();
12520-$a;
Curve.Begin(-163,-0.08);
12680-$a;
Curve.End();
Gradient.Begin(32);
12720-$a;
Curve.Begin(250,0.08);


12795-$a;
CabIlluminance.Set(0.1);
repeater['wallA1'].end();
repeater['wallB1'].end();
repeater['dike'].Begin(0,1.4,0, 0, 0, 0, 0, 1, 15, 15, '202_3');
Repeater['6bansen_ballast'].Begin('6bansen', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail2');
Repeater['5bansen_ballast'].Begin('2', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail2');
repeater['form-hidari'].Begin(0,-4.3,0,0,0,0,0,1,1.65,1.65,'form-hidari');
repeater['form-hidariB'].Begin(2,4.3,0,0,0,180,0,1,1.65,1.65,'form-hidari');
Curve.BeginTransition();
12800-$a;
//ホーム開始
CabIlluminance.Set(0.7);
repeater['kayabawallA'].Begin(0,-6.2,-0.2,0,0,0,0,1,4,4,'kayabawall');
repeater['kayabayukaA'].Begin(0,-4.5,-0.1,0,0,0,0,1,4,4,'kayabayuka');
repeater['kayabatenjo'].Begin(0,-4.3,-0.2,0,0,0,0,1,5,5,'kayabatenjo');
repeater['kayabawallB'].Begin(2,6.2,-0.2,0,0,180,0,1,4,4,'kayabawall');
repeater['kayabayukaB'].Begin(2,4.5,-0.1,0,0,0,0,1,4,4,'kayabayuka');
repeater['kayabatenjoB'].Begin(2,4.3,-0.2,0,0,0,0,1,5,5,'kayabatenjo');
Curve.End();
12805-$a;
repeater['kayabapoleA'].Begin(0,-3.2,1.1,0,0,90,0,1,10,10,'kayabapole');
repeater['kayabapoleB'].Begin(2,3.2,1.1,0,0,90,0,1,10,10,'kayabapole');
12850-$a;
repeater['kayabawallA'].Begin(0,-5,-0.2,0,0,0,0,1,4,4,'kayabawall');
structure['kayabawall'].Put(0,-7,-0.2,-2,0,90,0,1,10);
12870 - $a;
repeater['kayabapoleA'].end();
repeater['kayabapoleB'].end();
12900-$a;
Gradient.Begin(7);
12950-$a;
//茅場町
12959-$a;
//ホーム終了
CabIlluminance.Set(0.7);
repeater['form-hidari'].End();
12960.1-$a;
Repeater['wallA1'].Begin(0, -1.83, 0.01, 0, 0, 0, 0, 1, 14.8, 14.8, '103L');
Repeater['tenjo105'].Begin(0, -1.83, 0.01, 0, 0, 0, 0, 1, 15, 15, '105L');
Repeater['tenjo106'].Begin(0, -2, 0.01, 0, 0, 0, 0, 1, 15, 15, '106');
Repeater['wallB1'].Begin('2', 1.83, 0.01, 0, 0, 0, 0, 1, 15, 15, '103R');
Repeater['6bansen_ballast'].Begin('6bansen', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail3_2','Rail3_3','Rail3_1');
Repeater['5bansen_ballast'].Begin('2', 0, 0, 0, 0, 0, 0, 3, 5, 5, 'Rail3_2','Rail3_3','Rail3_1');
repeater['dike'].Begin(0,1.4,0, 0, 0, 0, 0, 1, 15, 15, '202_3');
12962-$a;
structure['kayabawall'].Put(0,-4.3,-0.2,-2,0,90,0,1,10);
12965-$a;
repeater['kayabawallA'].End();
repeater['kayabayukaA'].End();
repeater['kayabatenjo'].End();
repeater['kayabawallB'].End();
repeater['kayabayukaB'].End();
repeater['form-hidariB'].End();
repeater['kayabatenjoB'].End();
12960-$a;
CabIlluminance.Set(0.1);
13000-$a;
Gradient.Begin(-7);
13220-$a;
Gradient.Begin(2);
13300-$a;
Track[2].Position(5,0);

//おふざけ
14000-$a;
Gradient.BeginTransition();
Gradient.End();
14001-$a;
Gradient.BeginTransition();
Gradient.Begin(-300);
Curve.Begin(100,0);
24000-$a;
Curve.End();
Gradient.BeginTransition();
Gradient.End();