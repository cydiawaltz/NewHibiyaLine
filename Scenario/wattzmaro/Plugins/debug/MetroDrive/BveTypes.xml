<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BveTypes</name>
    </assembly>
    <members>
        <member name="T:BveTypes.BveTypeSet">
            <summary>
            クラスラッパーに対応する BVE の型とメンバーの情報を提供します。
            </summary>
        </member>
        <member name="P:BveTypes.BveTypeSet.ProfileVersion">
            <summary>
            読み込まれたプロファイルが対応している BVE のバージョンを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetTypeInfoOf``1">
            <summary>
            <typeparamref name="TWrapper"/> に指定したラッパー型の情報を取得します。
            </summary>
            <typeparam name="TWrapper">ラッパー型。</typeparam>
            <returns><typeparamref name="TWrapper"/> に指定したラッパー型の情報を表す <see cref="T:TypeWrapping.TypeMemberSetBase"/>。</returns>
            <seealso cref="M:BveTypes.BveTypeSet.GetClassInfoOf``1"/>
            <seealso cref="M:BveTypes.BveTypeSet.GetClassInfoOf(System.Type)"/>
            <seealso cref="M:BveTypes.BveTypeSet.GetEnumInfoOf``1"/>
            <seealso cref="M:BveTypes.BveTypeSet.GetEnumInfoOf(System.Type)"/>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetTypeInfoOf(System.Type)">
            <summary>
            <paramref name="wrapperType"/> に指定したラッパー型の情報を取得します。
            </summary>
            <param name="wrapperType">ラッパー型。</param>
            <returns><paramref name="wrapperType"/> に指定したラッパー型の情報を表す <see cref="T:TypeWrapping.TypeMemberSetBase"/>。</returns>
            <seealso cref="M:BveTypes.BveTypeSet.GetClassInfoOf``1"/>
            <seealso cref="M:BveTypes.BveTypeSet.GetClassInfoOf(System.Type)"/>
            <seealso cref="M:BveTypes.BveTypeSet.GetEnumInfoOf``1"/>
            <seealso cref="M:BveTypes.BveTypeSet.GetEnumInfoOf(System.Type)"/>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetEnumInfoOf``1">
            <summary>
            <typeparamref name="TWrapper"/> に指定したラッパー列挙型の情報を取得します。
            </summary>
            <typeparam name="TWrapper">ラッパー列挙型。</typeparam>
            <returns><typeparamref name="TWrapper"/> に指定したラッパー列挙型の情報を表す <see cref="T:TypeWrapping.EnumMemberSet"/>。</returns>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetEnumInfoOf(System.Type)">
            <summary>
            <paramref name="wrapperType"/> に指定したラッパー列挙型の情報を取得します。
            </summary>
            <param name="wrapperType">ラッパー列挙型。</param>
            <returns><paramref name="wrapperType"/> に指定したラッパー列挙型の情報を表す <see cref="T:TypeWrapping.EnumMemberSet"/>。</returns>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetClassInfoOf``1">
            <summary>
            <typeparamref name="TWrapper"/> に指定したラッパークラスの情報を取得します。
            </summary>
            <typeparam name="TWrapper">ラッパークラス。</typeparam>
            <returns><typeparamref name="TWrapper"/> に指定したラッパークラスの情報を表す <see cref="T:TypeWrapping.ClassMemberSet"/>。</returns>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetClassInfoOf(System.Type)">
            <summary>
            <paramref name="wrapperType"/> に指定したラッパークラスの情報を取得します。
            </summary>
            <param name="wrapperType">ラッパークラス。</param>
            <returns><paramref name="wrapperType"/> に指定したラッパークラスの情報を表す <see cref="T:TypeWrapping.ClassMemberSet"/>。</returns>
        </member>
        <member name="M:BveTypes.BveTypeSet.GetWrapperTypeOf(System.Type)">
            <summary>
            <paramref name="originalType"/> に指定したオリジナル型のラッパー型を取得します。
            </summary>
            <param name="originalType">オリジナル型。</param>
            <returns><paramref name="originalType"/> のラッパー型。</returns>
        </member>
        <member name="M:BveTypes.BveTypeSet.TryGetWrapperTypeOf(System.Type,System.Type@)">
            <summary>
            <paramref name="originalType"/> に指定したオリジナル型のラッパー型を取得します。
            </summary>
            <param name="originalType">オリジナル型。</param>
            <param name="wrapperType"><paramref name="originalType"/> のラッパー型が見つかった場合はラッパー型を表す <see cref="T:System.Type"/>、見つからなかった場合は <see langword="null"/> が格納されます。</param>
            <returns><paramref name="originalType"/> のラッパー型が見つかった場合は <see langword="true"/>、見つからなかった場合は <see langword="false"/>。</returns>
        </member>
        <member name="T:BveTypes.BveTypeSetFactory">
            <summary>
            <see cref="T:BveTypes.BveTypeSet"/> を読み込むための機能を提供します。
            </summary>
        </member>
        <member name="P:BveTypes.BveTypeSetFactory.BveAssembly">
            <summary>
            BVE 本体のものである <see cref="T:System.Reflection.Assembly"/> を取得・設定します。
            </summary>
            <remarks>
            既定値は <see cref="M:System.Reflection.Assembly.GetEntryAssembly"/> です。
            </remarks>
        </member>
        <member name="P:BveTypes.BveTypeSetFactory.AllowProfileForDifferentBveVersion">
            <summary>
            実行中の BVE がサポートされないバージョンの場合、他のバージョン向けのプロファイルで代用するかどうかを取得・設定します。
            </summary>
            <remarks>
            既定値は <see langword="false"/> です。
            </remarks>
        </member>
        <member name="E:BveTypes.BveTypeSetFactory.DifferentVersionProfileLoaded">
            <summary>
            実行中の BVE がサポートされないバージョンであり、他のバージョン向けのプロファイルで代用された時に呼び出されます。
            </summary>
            <remarks>
            パラメータにはプロファイルのバージョンが渡されます。
            </remarks>
        </member>
        <member name="M:BveTypes.BveTypeSetFactory.#ctor">
            <summary>
            <see cref="T:BveTypes.BveTypeSetFactory"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:BveTypes.BveTypeSetFactory.Load">
            <summary>
            この <see cref="T:BveTypes.BveTypeSetFactory"/> に設定された内容をもとに、クラスラッパーに対応する BVE の型とメンバーの定義を読み込みます。
            </summary>
            <returns>読み込まれた <see cref="T:BveTypes.BveTypeSet"/>。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.ClassWrapperBase">
            <summary>
            すべてのクラスラッパーの基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.CreateFromSource(System.Type,System.Object)">
            <summary>
            オリジナル オブジェクトから指定したラッパー型のインスタンスを生成します。
            </summary>
            <param name="wrapperType">生成するラッパーの型。</param>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <paramref name="wrapperType"/> で指定したラッパー型のインスタンス。</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="wrapperType"/> が <see langword="null"/> です。</exception>
            <exception cref="T:System.ArgumentException"><paramref name="wrapperType"/> で指定した型はクラスラッパーではありません。<see cref="T:BveTypes.ClassWrappers.ClassWrapperBase"/> を継承していません。</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="wrapperType"/> で指定した型内に有効なクラスラッパー生成メソッドが定義されていません。</exception>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.CreateFromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            ラッパー型はオリジナル オブジェクトの型から自動で推定されます。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップしたインスタンス。</returns>
            <exception cref="T:System.InvalidOperationException">ラッパー型内に有効なクラスラッパー生成メソッドが定義されていません。</exception>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.op_Equality(BveTypes.ClassWrappers.ClassWrapperBase,BveTypes.ClassWrappers.ClassWrapperBase)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.op_Inequality(BveTypes.ClassWrappers.ClassWrapperBase,BveTypes.ClassWrappers.ClassWrapperBase)">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.ClassWrapperBase.Src">
            <summary>
            ラップされているオリジナル オブジェクトを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.#ctor(System.Object)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.ClassWrapperBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="src"/> が <see langword="null"/> です。</exception>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassWrapperBase.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.Extensions.WrappedArray`1">
            <summary>
            オリジナル型の配列のラッパーを表します。
            </summary>
            <typeparam name="TWrapper">値のオリジナル型に対応するラッパー型。</typeparam>
            <seealso cref="T:System.Array"/>
        </member>
        <member name="F:BveTypes.ClassWrappers.Extensions.WrappedArray`1.Src">
            <summary>
            ラップされているオリジナル オブジェクトです。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Extensions.WrappedArray`1.Converter">
            <summary>
            オリジナル型とラッパー型を相互に変換するためのコンバータです。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.#ctor(System.Array,BveTypes.ITwoWayConverter{System.Object,`0})">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedArray`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップされているオリジナル オブジェクト。</param>
            <param name="converter">オリジナル型とラッパー型を相互に変換するためのコンバータ。</param>
            <exception cref="T:System.ArgumentException"><paramref name="src"/> が配列ではありません。</exception>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.#ctor(System.Array)">
            <summary>
            既定のコンバータを使用して、<see cref="T:BveTypes.ClassWrappers.Extensions.WrappedArray`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.FromSource(System.Array,BveTypes.ITwoWayConverter{System.Object,`0})">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <param name="converter">オリジナル型とラッパー型を相互に変換するための <see cref="T:BveTypes.ITwoWayConverter`2"/>。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedArray`1"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.FromSource(System.Array)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedArray`1"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.#ctor(System.Int32)">
            <summary>
            指定した長さを備えた空の配列を表す <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedArray`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="capacity">新しい配列に格納できる要素の数。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.IsFixedSize">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.Length">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.LongLength">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.Rank">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedArray`1.SyncRoot">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.CopyTo(`0[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedArray`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.Extensions.WrappedList`1">
            <summary>
            オリジナル型の <see cref="T:System.Collections.Generic.List`1"/> のラッパーを表します。
            </summary>
            <typeparam name="TWrapper">値のオリジナル型に対応するラッパー型。</typeparam>
            <seealso cref="T:System.Collections.Generic.SortedList`2"/>
        </member>
        <member name="F:BveTypes.ClassWrappers.Extensions.WrappedList`1.Src">
            <summary>
            ラップされているオリジナル オブジェクトです。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Extensions.WrappedList`1.Converter">
            <summary>
            オリジナル型とラッパー型を相互に変換するためのコンバータです。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.#ctor(System.Collections.IList,BveTypes.ITwoWayConverter{System.Object,`0})">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップされているオリジナル オブジェクト。</param>
            <param name="converter">オリジナル型とラッパー型を相互に変換するためのコンバータ。</param>
            <exception cref="T:System.ArgumentException"><paramref name="src"/> が <see cref="T:System.Collections.Generic.IList`1"/> の派生ではありません。</exception>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.#ctor(System.Collections.IList)">
            <summary>
            既定のコンバータを使用して、<see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.FromSource(System.Collections.IList,BveTypes.ITwoWayConverter{System.Object,`0})">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <param name="converter">オリジナル型とラッパー型を相互に変換するための <see cref="T:BveTypes.ITwoWayConverter`2"/>。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.FromSource(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.#ctor">
            <summary>
            空の <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            指定したコレクションからコピーした要素を格納し、コピーされる要素の数を格納できるだけの容量を備えた <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="collection">要素のコピー元となるコレクション。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.#ctor(System.Int32)">
            <summary>
            空で、指定した初期量を備えた <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedList`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="capacity">新しいリストに格納できる要素の数。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedList`1.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedList`1.Count">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedList`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.Add(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.Contains(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.CopyTo(`0[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.IndexOf(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.Insert(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedList`1.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2">
            <summary>
            値がオリジナル型の <see cref="T:System.Collections.Generic.SortedList`2"/> のラッパーを表します。
            </summary>
            <typeparam name="TKey">キーの型。</typeparam>
            <typeparam name="TValueWrapper">値のオリジナル型に対応するラッパー型。</typeparam>
            <seealso cref="T:System.Collections.Generic.SortedList`2"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Src">
            <summary>
            ラップされているオリジナル オブジェクトを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.#ctor(System.Collections.IDictionary,BveTypes.ITwoWayConverter{System.Object,`1})">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <param name="valueConverter">オリジナル型とラッパー型を相互に変換するための <see cref="T:BveTypes.ITwoWayConverter`2"/>。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.#ctor(System.Collections.IDictionary)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Item(`0)">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Capacity">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Comparer">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Count">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.IsFixedSize">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Keys">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Values">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Add(`0,`1)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Clear">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.ContainsKey(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.ContainsValue(`1)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.IndexOfKey(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.IndexOfValue(`1)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.TrimExcess">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2.TryGetValue(`0,`1@)">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.ConstantSpeedMode">
            <summary>
            定速制御の状態を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ConstantSpeedMode.Continue">
            <summary>
            現在の状態を維持します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ConstantSpeedMode.Enable">
            <summary>
            定速制御を起動します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ConstantSpeedMode.Disable">
            <summary>
            定速制御を停止します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.DoorSide">
            <summary>
            ドアの側を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.DoorSide.Left">
            <summary>
            左側を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.DoorSide.Right">
            <summary>
            右側を指定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ReverserPosition">
            <summary>
            逆転器の位置を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReverserPosition.B">
            <summary>
            後退位置を表します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReverserPosition.N">
            <summary>
            中立位置を表します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReverserPosition.F">
            <summary>
            前進位置を表します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.TiltOptions">
            <summary>
            マップ オブジェクトを傾斜させる方法を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.TiltOptions.Default">
            <summary>
            傾斜させないことを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.TiltOptions.TiltsAlongGradient">
            <summary>
            勾配に連動して傾斜させることを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.TiltOptions.TiltsAlongCant">
            <summary>
            カントに連動して傾斜させることを指定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.BcValve">
            <summary>
            ブレーキシリンダ電磁弁を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.BcValve.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.BcValve"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.BcValve.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.BcValve"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.BcValve.ReleaseStartMargin">
            <summary>
            排気が開始する際の圧力指令と現在圧力の差 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BcValve.ApplyStartMargin">
            <summary>
            給気が開始する際の圧力指令と現在圧力の差 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BcValve.ReleaseStopMargin">
            <summary>
            排気が停止する際の圧力指令と現在圧力の差 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BcValve.ApplyStopMargin">
            <summary>
            給気が停止する際の圧力指令と現在圧力の差 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CircularGauge">
            <summary>
            自列車の運転台の、円形の計器要素の基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CircularGauge.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CircularGauge"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CircularGauge.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CircularGauge"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.CircularGauge.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.CircularGauge"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CircularGauge.Radius">
            <summary>
            針やゲージの半径を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CircularGauge.InitialAngle">
            <summary>
            最小値を指す針やゲージの角度 [rad] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CircularGauge.LastAngle">
            <summary>
            最大値を指す針やゲージの角度 [rad] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CircularGauge.Max">
            <summary>
            この描画要素が表せる最大値を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CircularGauge.Min">
            <summary>
            この描画要素が表せる最小値を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CircularGauge.Tilt">
            <summary>
            垂直面に対する表示面の角度 [rad] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ClassicMapParser">
            <summary>
            バージョン 0.07、1.00、1.10 のマップの構文解析を行います。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassicMapParser.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ClassicMapParser"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClassicMapParser.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ClassicMapParser"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.DigitalGauge">
            <summary>
            自列車の運転台の円形デジタルゲージ計器要素を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DigitalGauge.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.DigitalGauge"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DigitalGauge.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.DigitalGauge"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.DigitalGauge.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.DigitalGauge"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.DigitalGauge.Step">
            <summary>
            ゲージの分解能を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.DigitalNumber">
            <summary>
            自列車の運転台のデジタル数字計器要素を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DigitalNumber.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.DigitalNumber"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DigitalNumber.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.DigitalNumber"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.DigitalNumber.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.DigitalNumber"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.DigitalNumber.Interval">
            <summary>
            数字配列画像の 1 コマの高さを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ConfigForm">
            <summary>
            「設定」フォームを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ConfigForm.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ConfigForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ConfigForm.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ConfigForm"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.ConfigForm.#ctor(BveTypes.ClassWrappers.MainForm)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.ConfigForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="mainForm">メインのフォーム。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ConfigForm.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapLoader">
            <summary>
            マップを読み込むための機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapLoader"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapLoader"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.#ctor(BveTypes.ClassWrappers.LoadingProgressForm,System.String,SlimDX.DirectSound.DirectSound,BveTypes.ClassWrappers.TimeManager,BveTypes.ClassWrappers.Map,BveTypes.ClassWrappers.CameraLocation,System.Boolean)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.MapLoader"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="loadingProgressForm">読込の進捗の報告先として使用する「シナリオを読み込んでいます...」フォーム。</param>
            <param name="filePath">読込対象となるマップファイルのパス。</param>
            <param name="directSound">DirectSound デバイス。</param>
            <param name="timeManager">時間を制御する <see cref="T:BveTypes.ClassWrappers.TimeManager"/>。</param>
            <param name="map">読み込んだマップデータを記憶する <see cref="T:BveTypes.ClassWrappers.Map"/>。</param>
            <param name="cameraLocation"><see cref="T:BveTypes.ClassWrappers.Sound"/> を読み込む際に指定する <see cref="T:BveTypes.ClassWrappers.CameraLocation"/>。</param>
            <param name="skipLoadStructures">ストラクチャーの読込をスキップするかどうか。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.LoadingProgressForm">
            <summary>
            読込の進捗の報告先として使用する「シナリオを読み込んでいます...」フォームを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.TimeManager">
            <summary>
            時間を制御する <see cref="T:BveTypes.ClassWrappers.TimeManager"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.Map">
            <summary>
            読み込んだマップデータを記憶する <see cref="T:BveTypes.ClassWrappers.Map"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.DirectSound">
            <summary>
            DirectSound デバイスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.Variables">
            <summary>
            変数の一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.Stations">
            <summary>
            駅の一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.CurrentLocation">
            <summary>
            現在の距離程 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.FilePath">
            <summary>
            読込対象となるマップファイルのパスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.Directory">
            <summary>
            読込対象となるマップファイルの配置されているディレクトリを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.CameraLocation">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Sound"/> を読み込む際に指定する <see cref="T:BveTypes.ClassWrappers.CameraLocation"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapLoader.Statements">
            <summary>
            ステートメントの一覧を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.Load">
            <summary>
            マップを読み込みます。
            </summary>
            <returns>読込に成功した場合は <see langword="true"/>、失敗した場合は <see langword="false"/>。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.RegisterFile(System.String)">
            <summary>
            読込対象となるマップファイルを登録します。
            </summary>
            <param name="filePath">マップファイルのパス。</param>
            <returns>読込に成功した場合は <see langword="true"/>、失敗した場合は <see langword="false"/>。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.ParseStatement(BveTypes.ClassWrappers.Extensions.WrappedList{BveTypes.ClassWrappers.MapStatementClause})">
            <summary>
            1 つのステートメントを構文解析します。
            </summary>
            <param name="clauses">ステートメントを構成する句の一覧。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.LoadSound3DList(System.String)">
            <summary>
            3D サウンドのリストを読み込みます。
            </summary>
            <param name="filePath">リストファイルのパス。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.LoadSoundList(System.String)">
            <summary>
            サウンドリストを読み込みます。
            </summary>
            <param name="filePath">リストファイルのパス。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.LoadSignalList(System.String)">
            <summary>
            信号現示リストを読み込みます。
            </summary>
            <param name="filePath">リストファイルのパス。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.LoadStructureList(System.String)">
            <summary>
            ストラクチャーリストを読み込みます。
            </summary>
            <param name="filePath">リストファイルのパス。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.LoadStationList(System.String)">
            <summary>
            停車場リストを読み込みます。
            </summary>
            <param name="filePath">リストファイルのパス。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapLoader.Include(System.String)">
            <summary>
            他のマップファイルの内容を挿入します。
            </summary>
            <param name="filePath">挿入するマップファイルのパス。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapParser">
            <summary>
            バージョン 2.0 以降のマップの構文解析を行います。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapParser"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapParser"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.Include(Irony.Parsing.ParseTreeNode)">
            <summary>
            他のマップファイルをインクルードします。
            </summary>
            <param name="node">インクルード文 (例: <c>include 'SubMap.txt';</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.SetLocation(Irony.Parsing.ParseTreeNode)">
            <summary>
            距離程 [m] を設定します。
            </summary>
            <param name="node">距離程を設定する構文 (例: <c>1200;</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.GetValue(Irony.Parsing.ParseTreeNode)">
            <summary>
            与えられた構文を解釈し、その実行結果を返します。
            </summary>
            <param name="node">構文木。</param>
            <returns>構文の実行結果。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.SetUserVariable(Irony.Parsing.ParseTreeNode)">
            <summary>
            変数に値を代入します。
            </summary>
            <param name="node">変数への代入 (例: <c>$foo = 123;</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.GetUserVariable(Irony.Parsing.ParseTreeNode)">
            <summary>
            変数の値を取得します。
            </summary>
            <param name="node">変数の取得 (例: <c>Curve.SetGauge($foo);</c> の <c>$foo</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.GetSystemVariable(BveTypes.ClassWrappers.Extensions.WrappedList{BveTypes.ClassWrappers.MapStatementClause},Irony.Parsing.ParseTreeNode)">
            <summary>
            システム変数 (<c>distance</c> など) の値を取得します。
            </summary>
            <param name="clauses">構文の句の一覧。</param>
            <param name="node">システム変数の取得 (例: <c>Beacon.Put(1, 0, distance);</c> の <c>distance</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.InvokeFunction(BveTypes.ClassWrappers.Extensions.WrappedList{BveTypes.ClassWrappers.MapStatementClause},Irony.Parsing.ParseTreeNode)">
            <summary>
            関数を実行します。
            </summary>
            <param name="clauses">構文の句の一覧。</param>
            <param name="node">関数 (例: <c>abs(1.23);</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.CalculateSign(Irony.Parsing.ParseTreeNode)">
            <summary>
            符号付きの値を解釈します。
            </summary>
            <param name="node">符号付きの値 (例: <c>-$foo</c>) を表す構文木。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParser.CalculateOperator(Irony.Parsing.ParseTreeNode)">
            <summary>
            数式を計算します。
            </summary>
            <param name="node">数式 (例: <c>(12 + 34 * 56 - 78) / 90</c>) を表す構文木。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapParserBase">
            <summary>
            マップの構文解析を行います。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParserBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapParserBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapParserBase.Variables">
            <summary>
            変数の一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapParserBase.FilePath">
            <summary>
            対象とするマップファイルのパスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapParserBase.Statements">
            <summary>
            読み込んだステートメントの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapParserBase.Location">
            <summary>
            距離程 [m] を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapParserBase.Parse(System.String,System.String)">
            <summary>
            マップ構文を解析します。
            </summary>
            <param name="sourceText">マップ構文のテキスト。</param>
            <param name="filePath">マップファイルのパス。この値はエラーを表示する際に使用されます。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapStatement">
            <summary>
            マップ ステートメントを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatement.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapStatement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatement.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapStatement"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatement.#ctor(System.Double,BveTypes.ClassWrappers.Extensions.WrappedList{BveTypes.ClassWrappers.MapStatementClause},System.String)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.MapStatement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">ステートメントが定義されている距離程 [m]。</param>
            <param name="clauses">ステートメントを構成する句の一覧。</param>
            <param name="fileName">ステートメントが定義されているマップファイルの名前。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatement.Location">
            <summary>
            このステートメントが定義されている距離程 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatement.Clauses">
            <summary>
            このステートメントを構成する句の一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatement.FileName">
            <summary>
            このステートメントが定義されているマップファイルの名前を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapStatementClause">
            <summary>
            マップ ステートメントの 1 つの句 (マップ要素、関数など) を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatementClause.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapStatementClause"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatementClause.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapStatementClause"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatementClause.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.MapStatementClause"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">句の名前。</param>
            <param name="lineIndex">句が存在する行番号。</param>
            <param name="charIndex">句が存在する列番号。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatementClause.Name">
            <summary>
            この句の名前を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatementClause.Args">
            <summary>
            この句が関数であるとき、引数の一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatementClause.Keys">
            <summary>
            この句がマップ要素であるとき、キーの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatementClause.LineIndex">
            <summary>
            この句が存在する行番号を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapStatementClause.CharIndex">
            <summary>
            この句が存在する列番号を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatementClause.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapStatementList">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.MapStatement"/> のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatementList.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapStatementList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapStatementList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapStatementList"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Needle">
            <summary>
            自列車の運転台の指針計器要素を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Needle.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Needle"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Needle.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Needle"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Needle.#ctor(BveTypes.ClassWrappers.TimeManager)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Needle"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="timeManager">針の振動の計算に用いる <see cref="T:BveTypes.ClassWrappers.TimeManager"/>。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Needle.Origin">
            <summary>
            針の画像における回転中心を設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Needle.NaturalFrequency">
            <summary>
            針の固有角振動数 [Hz] を取得・設定します。
            </summary>
            <remarks>
            94.24778 より大きい値を設定することはできません。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Needle.DampingRatio">
            <summary>
            針の減衰比を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Needle.IsStopPinEnabled">
            <summary>
            針の可動範囲を <see cref="P:BveTypes.ClassWrappers.CircularGauge.Min"/> と <see cref="P:BveTypes.ClassWrappers.CircularGauge.Max"/> の間に制限するかどうかを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.PilotLamp">
            <summary>
            自列車の運転台の表示灯計器要素を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.PilotLamp.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.PilotLamp"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.PilotLamp.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.PilotLamp"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.PilotLamp.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.PilotLamp"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Sound3DObject">
            <summary>
            マップ上に設置可能な固定音源を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound3DObject.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Sound3DObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound3DObject.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Sound3DObject"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound3DObject.#ctor(System.Double,System.String,System.Double,System.Double,System.Int32,BveTypes.ClassWrappers.Sound)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Sound3DObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="x">軌道からの x 座標 [m]。</param>
            <param name="y">軌道からの y 座標 [m]。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="source">再生するサウンド。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound3DObject.#ctor(System.Double,System.String,System.Double,System.Double,BveTypes.ClassWrappers.TiltOptions,BveTypes.ClassWrappers.Sound)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Sound3DObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="x">軌道からの x 座標 [m]。</param>
            <param name="y">軌道からの y 座標 [m]。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="source">再生するサウンド。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound3DObject.Source">
            <summary>
            再生するサウンドを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound3DObject.DistanceToSourceFront">
            <summary>
            他列車原点から音源域の前側までの距離 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound3DObject.Function">
            <summary>
            サウンドの種別を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Sound3DObject.SoundFunction">
            <summary>
            サウンドの種別を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Sound3DObject.SoundFunction.Stationary">
            <summary>
            定常音。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Sound3DObject.SoundFunction.Rolling">
            <summary>
            転動音。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Sound3DObject.SoundFunction.Acceleration">
            <summary>
            加速音。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Sound3DObject.SoundFunction.Deceleration">
            <summary>
            減速音。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Sound3DObjectList">
            <summary>
            マップ上に設置可能な固定音源のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound3DObjectList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Sound3DObjectList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound3DObjectList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Sound3DObjectList"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.SoundObject">
            <summary>
            自列車が通過した時にサウンドを再生するマップ オブジェクトを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundObject.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SoundObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundObject.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SoundObject"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundObject.#ctor(System.Double,System.Int32,BveTypes.ClassWrappers.Sound)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.SoundObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="_">使用しません。0 を指定してください。</param>
            <param name="source">自列車が通過した時に再生するサウンド。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.SoundObject.Source">
            <summary>
            自列車が通過した時に再生するサウンドを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.SoundObjectList">
            <summary>
            サウンド マップオブジェクトのリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundObjectList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SoundObjectList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundObjectList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SoundObjectList"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.TrainSchedule">
            <summary>
            他列車の運行スケジュールを表します。
            </summary>
            <remarks>
            このクラスのオリジナル型は構造体であることに注意してください。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TrainSchedule"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TrainSchedule"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.TrainSchedule"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="startTimeMilliseconds">このスケジュールの開始時刻 [ms]。</param>
            <param name="originTimeMilliseconds">このスケジュールの計算上の基準時刻 [ms]。</param>
            <param name="location">基準時刻 (<paramref name="originTimeMilliseconds"/>) における距離程 [m]。</param>
            <param name="speed">基準時刻 (<paramref name="originTimeMilliseconds"/>) における速度 [m/s]。</param>
            <param name="acceleration">加速度 [m/s^2]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.#ctor(System.TimeSpan,System.TimeSpan,System.Double,System.Double,System.Double)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.TrainSchedule"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="startTime">このスケジュールの開始時刻。</param>
            <param name="originTime">このスケジュールの計算上の基準時刻。</param>
            <param name="location">基準時刻 (<paramref name="originTime"/>) における距離程 [m]。</param>
            <param name="speed">基準時刻 (<paramref name="originTime"/>) における速度 [m/s]。</param>
            <param name="acceleration">加速度 [m/s^2]。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.StartTimeMilliseconds">
            <summary>
            このスケジュールの開始時刻をミリ秒単位で取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.StartTime">
            <summary>
            このスケジュールの開始時刻を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.OriginTimeMilliseconds">
            <summary>
            このスケジュールの計算上の基準時刻をミリ秒単位で取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.OriginTime">
            <summary>
            このスケジュールの計算上の基準時刻を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.Location">
            <summary>
            基準時刻 (<see cref="P:BveTypes.ClassWrappers.TrainSchedule.OriginTime"/> プロパティの値) における距離程 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.Speed">
            <summary>
            基準時刻 (<see cref="P:BveTypes.ClassWrappers.TrainSchedule.OriginTime"/> プロパティの値) における速度 [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainSchedule.Acceleration">
            <summary>
            加速度 [m/s^2] を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.GetLocation(System.Int32)">
            <summary>
            指定した時刻における距離程を計算します。
            </summary>
            <param name="timeMilliseconds">時刻 [ms]。</param>
            <returns>時刻 <paramref name="timeMilliseconds"/> [ms] における距離程 [m]。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.GetLocation(System.TimeSpan)">
            <summary>
            指定した時刻における距離程を計算します。
            </summary>
            <param name="time">時刻。</param>
            <returns>時刻 <paramref name="time"/> における距離程 [m]。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.GetSpeed(System.Int32)">
            <summary>
            指定した時刻における速度を計算します。
            </summary>
            <param name="timeMilliseconds">時刻 [ms]。</param>
            <returns>時刻 <paramref name="timeMilliseconds"/> [ms] における速度 [m/s]。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainSchedule.GetSpeed(System.TimeSpan)">
            <summary>
            指定した時刻における速度を計算します。
            </summary>
            <param name="time">時刻。</param>
            <returns>時刻 <paramref name="time"/> における速度 [m/s]。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.TrainStopObject">
            <summary>
            <c>Train[trainKey].Stop</c> ステートメントにより設置された他列車の停止位置を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainStopObject.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TrainStopObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainStopObject.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TrainStopObject"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainStopObject.#ctor(System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.TrainStopObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="deceleration">減速度 [m/s^2]。</param>
            <param name="stopTimeMilliseconds">停車時間 [ms]。</param>
            <param name="acceleration">加速度 [m/s^2]。</param>
            <param name="speed">加速後の走行速度 [m/s]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainStopObject.#ctor(System.Double,System.Double,System.TimeSpan,System.Double,System.Double)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.TrainStopObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="deceleration">減速度 [m/s^2]。</param>
            <param name="stopTime">停車時間。</param>
            <param name="acceleration">加速度 [m/s^2]。</param>
            <param name="speed">加速後の走行速度 [m/s]。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainStopObject.StopTimeMilliseconds">
            <summary>
            停車時間をミリ秒単位で取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainStopObject.StopTime">
            <summary>
            停車時間を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainStopObject.Acceleration">
            <summary>
            加速度 [m/s^2] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainStopObject.Deceleration">
            <summary>
            減速度 [m/s^2] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainStopObject.Speed">
            <summary>
            加速後の走行速度 [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ValueContainer">
            <summary>
            <see cref="T:System.Double"/> 型の値を 1 つ記憶します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueContainer.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ValueContainer"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueContainer.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ValueContainer"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ValueContainer.Value">
            <summary>
            値を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Valve">
            <summary>
            弁を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Valve.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Valve"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Valve.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Valve"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Valve.MrPressure">
            <summary>
            元溜め圧力 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Valve.TargetPressure">
            <summary>
            目標圧力 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Valve.ApplySpeed">
            <summary>
            給気速度 [Pa^(1/2)/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Valve.ReleaseSpeed">
            <summary>
            排気速度 [Pa^(1/2)/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Valve.VolumeRatio">
            <summary>
            元空気溜めとの容積比を取得・設定します。
            </summary>
            <remarks>
            車両パラメーターファイルにて指定する VolumeRatio の逆数であることに注意してください。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.Valve.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Valve.Tick(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.BrakeBlenderBase">
            <summary>
            電空協調制御の基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.BrakeBlenderBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.BrakeBlenderBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeBlenderBase.InitialPressure">
            <summary>
            初込め圧力 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeBlenderBase.MaximumPressure">
            <summary>
            電気ブレーキ (限流値) が最大となるブレーキシリンダー圧力指令 (空車時) (ブレーキ方式が電磁直通空気ブレーキの場合は直通管圧力) [Pa] を取得・設定します。
            </summary>
            <remarks>
            締切電磁弁式の場合、ブレーキシリンダー圧力指令がこの値を超えると遅れ込め圧力が立ち上がります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeBlenderBase.SapBcRatio">
            <summary>
            圧力指令変化に対するブレーキシリンダー圧力変化の比を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeBlenderBase.SapBcOffset">
            <summary>
            ブレーキシリンダー圧力が上昇するための最低圧力指令 [Pa] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CarBrake">
            <summary>
            車両のブレーキを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarBrake.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CarBrake"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarBrake.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CarBrake"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarBrake.BcValve">
            <summary>
            ブレーキシリンダ電磁弁を表す <see cref="T:BveTypes.ClassWrappers.BcValve"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarBrake.BasicBrake">
            <summary>
            基礎ブレーキ装置を表す <see cref="T:BveTypes.ClassWrappers.BasicBrake"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarBrake.BrakeReAdhesion">
            <summary>
            基礎ブレーキ装置の滑走再粘着制御機構を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ConstantSpeedRelay">
            <summary>
            定速制御を行うためのリレーを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ConstantSpeedRelay.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ConstantSpeedRelay"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ConstantSpeedRelay.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ConstantSpeedRelay"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ConstantSpeedRelay.NeutralControlMode">
            <summary>
            惰行中に定速スイッチが扱われた場合の制御種別を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ConstantSpeedRelay.PowerControlMode">
            <summary>
            力行中に定速スイッチが扱われた場合の制御種別を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ConstantSpeedRelay.BrakeControlMode">
            <summary>
            ブレーキ中に定速スイッチが扱われた場合の制御種別を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ConstantSpeedRelay.MinSpeed">
            <summary>
            定速制御が作動する最低速度 [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.InterpolatableMapObjectList">
            <summary>
            2 点間の値の線形補間値を計算可能な <see cref="T:BveTypes.ClassWrappers.MapObjectList"/> を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.InterpolatableMapObjectList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.InterpolatableMapObjectList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.InterpolatableMapObjectList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.InterpolatableMapObjectList"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.InterpolatableMapObjectList.GetValueAt(System.Double)">
            <summary>
            指定した距離程における線形補間値を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.AirSpring">
            <summary>
            空気ばねのモデルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AirSpring.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AirSpring"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AirSpring.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.AirSpring"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.AirSupplement">
            <summary>
            遅れ込め制御式電空協調制御を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AirSupplement.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AirSupplement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AirSupplement.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.AirSupplement"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.AirSupplement.ShoeFriction">
            <summary>
            電空演算に用いる制輪子の想定摩擦係数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AirSupplement.MotorCarRatio">
            <summary>
            編成の電動車率を取得・設定します。
            </summary>
            <remarks>
            必要に応じて <see cref="P:BveTypes.ClassWrappers.CarInfo.Count"/> プロパティも設定してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.CarInfo.Count"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.AirSupplement.PistonArea">
            <summary>
            てこ比を 1、機械的損失を 0 としたときの 1 両あたりのシリンダ受圧面積 [m^2] を取得・設定します。
            </summary>
            <remarks>
            必要に応じて <see cref="P:BveTypes.ClassWrappers.BasicBrake.PistonArea"/> プロパティも設定してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.BasicBrake.PistonArea"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.AssistantText">
            <summary>
            テキストによる補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AssistantText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantText.#ctor(Mackoy.Bvets.AssistantSettings)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.AssistantText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="config">スタイルを指定する <see cref="T:Mackoy.Bvets.AssistantSettings"/>。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.AssistantText"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantText.Create(System.String)">
            <summary>
            表示するテキストを指定して、既定のスタイルの <see cref="T:BveTypes.ClassWrappers.AssistantText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            補助的に定義されているメソッドです。オリジナル型には存在しません。
            </remarks>
            <param name="text">表示するテキスト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.AssistantText.Color">
            <summary>
            表示するテキストの文字色を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AssistantText.Text">
            <summary>
            表示するテキストを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.AssistantBase">
            <summary>
            すべての補助表示の基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AssistantBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.AssistantBase.AssistantSettings">
            <summary>
            補助表示の設定を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AssistantBase.BackgroundColor">
            <summary>
            補助表示の背景色を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AssistantBase.DisplayArea">
            <summary>
            表示する位置とサイズを表す <see cref="T:System.Drawing.Rectangle"/> を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantBase.Draw">
            <summary>
            補助表示を描画します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantBase.OnDeviceLost">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantBase.OnDeviceReset">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.AssistantSet">
            <summary>
            補助表示のセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AssistantSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.AssistantText"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.AssistantSet.Items">
            <summary>
            補助表示の一覧を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantSet.Draw">
            <summary>
            全ての補助表示を描画します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantSet.OnDeviceLost">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.AssistantSet.OnDeviceReset">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.Background">
            <summary>
            背景モデルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Background.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Background"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Background.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Background"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Background.BackgroundObjects">
            <summary>
            背景ストラクチャーのリストを取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Background.Draw(BveTypes.ClassWrappers.Direct3DProvider,SlimDX.Matrix)">
            <summary>
            回転角度を指定して背景モデルを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="rotationMatrix">方角に合わせるための回転行列。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.BasicBrake">
            <summary>
            基礎ブレーキ装置を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.BasicBrake.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.BasicBrake"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.BasicBrake.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.BasicBrake"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.BasicBrake.PistonArea">
            <summary>
            てこ比を 1、機械的損失を 0 としたときの 1 両あたりのシリンダ受圧面積 [m^2] を取得・設定します。
            </summary>
            <remarks>
            必要に応じて <see cref="P:BveTypes.ClassWrappers.AirSupplement.PistonArea"/> プロパティも設定してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.AirSupplement.PistonArea"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.Beacon">
            <summary>
            Beacon.Put ステートメントで設置された地上子を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Beacon.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Beacon"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Beacon.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Beacon"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Beacon.#ctor(System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Beacon"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            <paramref name="targetSectionIndex"/> に指定するのは関連づける閉塞の絶対インデックスです。設置位置から見た相対インデックスではありませんので注意してください。
            </remarks>
            <param name="location">設置する距離程 [m]。</param>
            <param name="type">保安装置に送る地上子種別。</param>
            <param name="targetSectionIndex">関連づける閉塞の絶対インデックス。</param>
            <param name="sendData">保安装置に送る値。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Beacon.TargetSectionIndex">
            <summary>
            関連づける閉塞の絶対インデックスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Beacon.Type">
            <summary>
            保安装置に送る地上子種別を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Beacon.SendData">
            <summary>
            保安装置に送る値を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.BrakeControllerBase">
            <summary>
            すべてのブレーキ方式の基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.BrakeControllerBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.BrakeControllerBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeControllerBase.MaximumPressure">
            <summary>
            常用最大ブレーキ時のブレーキシリンダー圧力指令 (空車時) [Pa] を取得・設定します。<br/>
            電磁直通空気ブレーキの場合は直通管圧力を表します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeControllerBase.PressureRates">
            <summary>
            MaximumPressure を 1 としたときの各ブレーキノッチの圧力指令を取得・設定します。
            </summary>
            <remarks>
            電気指令式ブレーキおよび電磁直通空気ブレーキの場合に限り認識されます。
            </remarks>
        </member>
        <member name="T:BveTypes.ClassWrappers.BrakePosition">
            <summary>
            ブレーキハンドルの位置を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.BrakePosition.Release">
            <summary>
            緩解位置。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.BrakePosition.Service">
            <summary>
            常用ブレーキ位置 (B67)。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.BrakePosition.Emergency">
            <summary>
            非常ブレーキ位置。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.BrakeSystem">
            <summary>
            自列車のブレーキシステム全体を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.BrakeSystem.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.BrakeSystem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.BrakeSystem.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.BrakeSystem"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.BrakeBlender">
            <summary>
            自列車が使用する電空協調制御を取得します。
            </summary>
            <remarks>
            取得される値は、パラメーターファイルでの設定に合わせて <see cref="P:BveTypes.ClassWrappers.BrakeSystem.AirSupplement"/> プロパティ、<see cref="P:BveTypes.ClassWrappers.BrakeSystem.LockoutValve"/> プロパティのどちらかとなります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.AirSupplement">
            <summary>
            遅れ込め制御式電空協調制御を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.LockoutValve">
            <summary>
            締切電磁弁式電空協調制御を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.BrakeController">
            <summary>
            自列車が使用するブレーキ方式を取得します。
            </summary>
            <remarks>
            取得される値は、パラメーターファイルでの設定に合わせて <see cref="P:BveTypes.ClassWrappers.BrakeSystem.Ecb"/> プロパティ、<see cref="P:BveTypes.ClassWrappers.BrakeSystem.Smee"/> プロパティ、<see cref="P:BveTypes.ClassWrappers.BrakeSystem.Cl"/> プロパティのいずれかとなります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.Ecb">
            <summary>
            電気指令式ブレーキを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.Smee">
            <summary>
            電磁直通空気ブレーキを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.Cl">
            <summary>
            自動空気ブレーキを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.MotorCarBrake">
            <summary>
            動力車のブレーキを表す <see cref="T:BveTypes.ClassWrappers.CarBrake"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.TrailerCarBrake">
            <summary>
            付随車のブレーキを表す <see cref="T:BveTypes.ClassWrappers.CarBrake"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.BrakeSystem.FirstCarBrake">
            <summary>
            先頭車両のブレーキを表す <see cref="T:BveTypes.ClassWrappers.CarBrake"/> を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.BveFile">
            <summary>
            シナリオを構成するファイルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.BveFile.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.BveFile"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.BveFile.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.BveFile"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.BveFile.Path">
            <summary>
            ファイルのパスを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CabBase">
            <summary>
            運転台のハンドルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CabBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CabBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.CabBase.Handles">
            <summary>
            操作可能なハンドルのセットを表す <see cref="T:BveTypes.ClassWrappers.HandleSet"/> を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CabBase.GetDescriptionText">
            <summary>
            現在の状態を説明するテキストを取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CameraLocation">
            <summary>
            カメラの位置に関する情報を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CameraLocation.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CameraLocation"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CameraLocation.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CameraLocation"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.CameraLocation.TransformFromBlock">
            <summary>
            現在位置のストラクチャーブロックの原点から見たときの、このカメラの相対位置を表すワールド変換行列を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CameraLocation.TransformFromCameraHomePosition">
            <summary>
            このカメラのホーム位置から見たときの、現在のカメラの相対位置を表す変換行列を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CameraLocation.Plane">
            <summary>
            このカメラのプレーンを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CameraLocation.Speed">
            <summary>
            このカメラが移動する速度 [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Cant">
            <summary>
            自軌道のカントを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Cant.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Cant"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Cant.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Cant"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Cant.RotationZ">
            <summary>
            カントの角度 [rad] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Cant.CenterX">
            <summary>
            このカントの回転中心の X 座標 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Cant.FunctionId">
            <summary>
            このカントが設置されているカーブの緩和曲線関数を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CantList">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Cant"/> のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CantList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CantList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CantList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CantList"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.CantList.RotationZ">
            <summary>
            最後に <see cref="M:BveTypes.ClassWrappers.MapObjectList.GoTo(System.Double)"/> メソッドで設定された距離程における、カントの角度 [rad] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CantList.Y">
            <summary>
            最後に <see cref="M:BveTypes.ClassWrappers.MapObjectList.GoTo(System.Double)"/> メソッドで設定された距離程における、カントの回転中心の Y 座標 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CantList.X">
            <summary>
            最後に <see cref="M:BveTypes.ClassWrappers.MapObjectList.GoTo(System.Double)"/> メソッドで設定された距離程における、カントの回転中心の X 座標 [m] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CarInfo">
            <summary>
            自列車の車両に関する物理演算機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarInfo.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CarInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarInfo.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CarInfo"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.Weight">
            <summary>
            1 両当たりの重量 [kg] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.Count">
            <summary>
            両数を取得・設定します。
            </summary>
            <remarks>
            必要に応じて <see cref="P:BveTypes.ClassWrappers.AirSupplement.MotorCarRatio"/> プロパティも設定してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.AirSupplement.MotorCarRatio"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.InertiaFactor">
            <summary>
            慣性係数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.ShoeFrictionA">
            <summary>
            制輪子摩擦係数式の係数 a を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.ShoeFrictionB">
            <summary>
            制輪子摩擦係数式の係数 b を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.ShoeFrictionC">
            <summary>
            制輪子摩擦係数式の係数 c を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarInfo.IsSlipping">
            <summary>
            現在空転または滑走しているかどうかを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Cl">
            <summary>
            自動空気ブレーキを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Cl.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Cl"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Cl.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Cl"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Cl.BpInitialPressure">
            <summary>
            ブレーキ緩解時のブレーキ管圧力 [Pa] を取得・設定します。
            </summary>
            <remarks>
            電磁直通空気ブレーキおよび自動空気ブレーキの場合に限り認識されます。
            </remarks>
        </member>
        <member name="T:BveTypes.ClassWrappers.ClockText">
            <summary>
            「速度・時刻」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClockText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ClockText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ClockText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ClockText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Curve">
            <summary>
            自軌道のカーブを表します。
            </summary>
            <remarks>
            緩和曲線、円曲線のどちらもこのクラスで定義します。緩和曲線の場合は 1m ごとに曲率が変化するため、曲率の変化する 1m ごとに定義します。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.Curve.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Curve"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Curve.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Curve"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Curve.Curvature">
            <summary>
            このカーブの曲率 [/m]、すなわち半径 [m] の逆数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Curve.Direction">
            <summary>
            このカーブの始点における方角を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.CurveList">
            <summary>
            自軌道のカーブのリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.CurveList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CurveList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CurveList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CurveList"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.DetailText">
            <summary>
            「内部計算値」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DetailText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.DetailText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DetailText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.DetailText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Direct3DProvider">
            <summary>
            Direct3D の機能を利用するためのメンバーを提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Direct3DProvider.#ctor(System.Object)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Direct3DProvider.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Direct3DProvider.Instance">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/> クラスのインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Direct3DProvider.Direct3D">
            <summary>
            <see cref="T:SlimDX.Direct3D9.Direct3D"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Direct3DProvider.Device">
            <summary>
            <see cref="T:SlimDX.Direct3D9.Device"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Direct3DProvider.PresentParameters">
            <summary>
            <see cref="P:BveTypes.ClassWrappers.Direct3DProvider.Device"/> の生成に使用した <see cref="T:SlimDX.Direct3D9.PresentParameters"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Direct3DProvider.HasDeviceLost">
            <summary>
            デバイス ロスト状態であるかどうかを取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Direct3DProvider.CreateDevice(System.Windows.Forms.Control,System.Boolean,System.Drawing.Size)">
            <summary>
            描画対象を指定して Direct3D9 デバイスを作成します。
            </summary>
            <param name="deviceWindow">描画対象の Windows Forms コントロール。</param>
            <param name="isWindowed">ウィンドウモードかどうか。</param>
            <param name="windowSize">描画対象のウィンドウのサイズ。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Direct3DProvider.InitializeStates">
            <summary>
            デバイスの各種状態を初期化します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Direct3DProvider.Render(BveTypes.ClassWrappers.IDrawable)">
            <summary>
            指定したオブジェクトへ描画します。
            </summary>
            <param name="target">描画のターゲット。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.CarDoor">
            <summary>
            自列車の 1 車両のドアを表します。
            </summary>
            <remarks>
            ドアを車両単位で定義することで、車両ごとのドアが閉まるタイミングの誤差を表現しています。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarDoor.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.CarDoor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarDoor.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.CarDoor"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarDoor.CloseTime">
            <summary>
            このドアが閉まるのに要する時間 [ms] を取得・設定します。
            </summary>
            <remarks>
            標準では、<see cref="P:BveTypes.ClassWrappers.SideDoorSet.StandardCloseTime"/> をランダムに 0.95 ～ 1.05 倍した値が設定されています。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.SideDoorSet.StandardCloseTime"/>
            <seealso cref="P:BveTypes.ClassWrappers.DoorSet.StandardCloseTime"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarDoor.IsOpen">
            <summary>
            このドアが開いているかどうかを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarDoor.TimeLeftToCompleteClosing">
            <summary>
            このドアが [ms] を取得・設定します。
            </summary>
            <remarks>
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.CarDoor.CloseTime"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.CarDoor.State">
            <summary>
            このドアの開閉状態を取得します。
            </summary>
            <remarks>
            開閉状態の変更には <see cref="M:BveTypes.ClassWrappers.CarDoor.SetState(BveTypes.ClassWrappers.DoorState)"/> メソッド、<see cref="M:BveTypes.ClassWrappers.CarDoor.Open"/> メソッド、<see cref="M:BveTypes.ClassWrappers.CarDoor.Close(System.Int32)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.CarDoor.CloseTime"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.SetState(BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.Open"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.Close(System.Int32)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarDoor.SetState(BveTypes.ClassWrappers.DoorState)">
            <summary>
            このドアの開閉状態を変更します。
            </summary>
            <param name="state">指定する開閉状態。</param>
            <remarks>
            開閉状態の取得には <see cref="P:BveTypes.ClassWrappers.CarDoor.State"/> プロパティを使用してください。<br/>
            このメソッドを直接実行すると、本来開閉状態を変更した時に発生する一部のイベントが発生しません。通常は <see cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.CarDoor.State"/>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.Open"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.Close(System.Int32)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarDoor.Open">
            <summary>
            このドアを開けます。
            </summary>
            <remarks>
            開閉時の演出を伴わずに状態を変更したい場合は <see cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.Close(System.Int32)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.CarDoor.Close(System.Int32)">
            <summary>
            このドアを閉めます。
            </summary>
            <remarks>
            開閉時の演出を伴わずに状態を変更したい場合は <see cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/> メソッドを使用してください。
            </remarks>
            <param name="stuckTime">旅客がこのドアに挟まる時間 [ms]。</param>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.CarDoor.Open"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.DoorSet">
            <summary>
            自列車のドアのセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DoorSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.DoorSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DoorSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.DoorSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.DoorSet.StandardCloseTime">
            <summary>
            この側のドアが閉まるのに要する時間の基準 [ms] を取得・設定します。
            </summary>
            <remarks>
            <list type="bullet">
            <item>標準では、これをランダムに 0.95 ～ 1.05 倍した値が各ドア (<see cref="P:BveTypes.ClassWrappers.SideDoorSet.CarDoors"/> プロパティの各要素) の <see cref="P:BveTypes.ClassWrappers.CarDoor.CloseTime"/> プロパティに設定されます。</item>
            <item>
            取得の場合、厳密には左側のドアの <see cref="P:BveTypes.ClassWrappers.SideDoorSet.StandardCloseTime"/> プロパティの値が返されます。
            標準ではドアの側によって値が異なることはありませんが、プラグインなどから手動で変更している場合は注意してください。
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.DoorSet.AreAllClosed">
            <summary>
            全てのドアが閉まり切っているかどうかを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DoorSet.GetSide(BveTypes.ClassWrappers.DoorSide)">
            <summary>
            指定した側のドアの一覧を取得します。
            </summary>
            <returns><paramref name="doorSide"/> 側のドアの一覧を表す <see cref="T:BveTypes.ClassWrappers.SideDoorSet"/>。</returns>
            <param name="doorSide">指定するドアの側。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DoorSet.SetCarLength(System.Int32)">
            <summary>
            両数を指定して両側の <see cref="P:BveTypes.ClassWrappers.SideDoorSet.CarDoors"/> プロパティを初期化します。
            </summary>
            <param name="length">両数。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)">
            <summary>
            全てのドアの開閉状態を変更します。
            </summary>
            <remarks>
            このメソッドは標準では駅ジャンプ時などに使用されており、実行すると開閉時の演出なしで状態が変更されます。
            演出を伴った開閉状態の変更を行いたい場合は <see cref="M:BveTypes.ClassWrappers.SideDoorSet.OpenDoors"/> メソッド、<see cref="M:BveTypes.ClassWrappers.SideDoorSet.CloseDoors(System.Int32)"/> メソッドを使用してください。
            </remarks>
            <param name="left">指定する左側のドアの開閉状態。</param>
            <param name="right">指定する右側のドアの開閉状態。</param>
            <seealso cref="M:BveTypes.ClassWrappers.SideDoorSet.OpenDoors"/>
            <seealso cref="M:BveTypes.ClassWrappers.SideDoorSet.CloseDoors(System.Int32)"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.DoorState">
            <summary>
            客室ドアの開閉状態を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.DoorState.Close">
            <summary>
            ドアが閉まっていること、あるいはドアを閉めることを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.DoorState.Open">
            <summary>
            ドアが開いていること、あるいはドアを開けることを指定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.DrawDistanceManager">
            <summary>
            ストラクチャーの描画範囲を算出するための機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DrawDistanceManager.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.DrawDistanceManager"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.DrawDistanceManager.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.DrawDistanceManager"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.DrawDistanceManager.FacingDirection">
            <summary>
            カメラの向いている方向を取得・設定します。
            </summary>
            <remarks>
            前方を向いている場合は 0、後方を向いている場合は 2、その中間付近を向いている場合は 1 となります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.DrawDistanceManager.FrontDrawDistance">
            <summary>
            前方の描画距離 [m] を取得・設定します。
            </summary>
            <remarks>
            前方を向いている場合は <see cref="P:BveTypes.ClassWrappers.DrawDistanceManager.DrawDistance"/> プロパティの値、後方を向いている場合は必要最低限の距離となります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.DrawDistanceManager.BackDrawDistance">
            <summary>
            後方の描画距離 [m] を取得・設定します。
            </summary>
            <remarks>
            前方を向いている場合は必要最低限の距離、後方を向いている場合は <see cref="P:BveTypes.ClassWrappers.DrawDistanceManager.DrawDistance"/> プロパティの値となります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.DrawDistanceManager.DrawDistance">
            <summary>
            マップファイル内での最長描画距離指定とユーザー設定から算出された描画距離 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.DrawDistanceManager.DrawDistanceObjects">
            <summary>
            マップファイルで DrawDistance.Change ステートメントにより設置された、最長描画距離を指定するためのオブジェクトを取得します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.DrawDistanceManager.FacingDirectionChanged">
            <summary>
            カメラの向いている方向が変わり、<see cref="P:BveTypes.ClassWrappers.DrawDistanceManager.FacingDirection"/> の値が変更されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DrawDistanceManager.FacingDirectionChanged_Invoke">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.DrawDistanceManager.FacingDirectionChanged"/> イベントを実行します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.DrawDistanceManager.UpdateEachDirectionDrawDistance">
            <summary>
            前後各方向の描画ブロック数を、現在カメラが向いている方向に合わせて設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Ecb">
            <summary>
            電気指令式ブレーキを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Ecb.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Ecb"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Ecb.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Ecb"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.IDrawable">
            <summary>
            Direct3D9 によって描画することが可能であるコンポーネントなどを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.IDrawable.Draw">
            <summary>
            このオブジェクトに描画します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.IDrawable.OnDeviceLost">
            <summary>
            Direct3D9 デバイスがロストした時に呼び出されます。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.IDrawable.OnDeviceReset">
            <summary>
            Direct3D9 デバイスがリセットされた時に呼び出されます。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ITickable">
            <summary>
            フレーム毎に実行可能であることを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ITickable.Initialize">
            <summary>
            初期化します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ITickable.Tick(System.Double)">
            <summary>
            毎フレーム呼び出されます。
            </summary>
            <param name="elapsedSeconds">前フレームからの経過時間 [s]。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.JerkRegulator">
            <summary>
            自列車のジャーク制御機構を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.JerkRegulator.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.JerkRegulator"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.JerkRegulator.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.JerkRegulator"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.JerkRegulator.MotorState">
            <summary>
            自列車のモーターの状態を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.JerkRegulator.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.JerkRegulator.CalculateRawCurrent">
            <summary>
            ジャーク制御介入前の電流値 [A] を計算します。
            </summary>
            <returns>ジャーク制御介入前の電流値 [A]。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.JerkRegulator.Tick(System.Double)">
            <summary>
            毎フレーム呼び出され、<see cref="P:BveTypes.ClassWrappers.JerkRegulator.MotorState"/> の値を更新します。
            </summary>
            <param name="elapsedSeconds">前フレームからの経過時間 [s]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.JerkRegulator.Tick(System.TimeSpan)">
            <summary>
            毎フレーム呼び出され、<see cref="P:BveTypes.ClassWrappers.JerkRegulator.MotorState"/> の値を更新します。
            </summary>
            <remarks>
            このメソッドはオリジナルではないため、<see cref="M:TypeWrapping.ClassMemberSet.GetSourceMethodOf(System.String,System.Type[])"/> メソッドから参照することはできません。<br/>
            このメソッドのオリジナルバージョンは <see cref="M:BveTypes.ClassWrappers.JerkRegulator.Tick(System.Double)"/> です。
            </remarks>
            <param name="elapsed">前フレームからの経過時間。</param>
            <seealso cref="M:BveTypes.ClassWrappers.JerkRegulator.Tick(System.Double)"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.Physical">
            <summary>
            変位、速度、加速度から成る物理量を表します。
            </summary>
            <remarks>
            このクラスのオリジナル型は構造体であることに注意してください。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Physical"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Physical"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Physical"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="displacement">変位。</param>
            <param name="velocity">速度。</param>
            <param name="acceleration">加速度。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.#ctor(System.Double,System.Double)">
            <summary>
            加速度が 0 の <see cref="T:BveTypes.ClassWrappers.Physical"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="displacement">変位。</param>
            <param name="velocity">速度。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.#ctor(System.Double)">
            <summary>
            速度、加速度が 0 の <see cref="T:BveTypes.ClassWrappers.Physical"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="displacement">変位。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Physical.Displacement">
            <summary>
            変位を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Physical.Velocity">
            <summary>
            速度を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Physical.Acceleration">
            <summary>
            加速度を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.op_Addition(BveTypes.ClassWrappers.Physical,BveTypes.ClassWrappers.Physical)">
            <summary>
            2 つの <see cref="T:BveTypes.ClassWrappers.Physical"/> を足し合わせます。
            </summary>
            <param name="a">左辺。</param>
            <param name="b">右辺。</param>
            <returns><paramref name="a"/> と <paramref name="b"/> を足し合わせた結果。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.op_Subtraction(BveTypes.ClassWrappers.Physical,BveTypes.ClassWrappers.Physical)">
            <summary>
            一方の <see cref="T:BveTypes.ClassWrappers.Physical"/> からもう一方の <see cref="T:BveTypes.ClassWrappers.Physical"/> を引きます。
            </summary>
            <param name="a">左辺。</param>
            <param name="b">右辺。</param>
            <returns><paramref name="a"/> から <paramref name="b"/> を引いた結果。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Physical.op_Multiply(System.Double,BveTypes.ClassWrappers.Physical)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Physical"/> を実数倍します。
            </summary>
            <param name="a">左辺。</param>
            <param name="b">右辺。</param>
            <returns><paramref name="b"/> を <paramref name="a"/> 倍した結果。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.SpeedLimitList">
            <summary>
            速度制限のリストを表します。
            </summary>
            <remarks>
            通常、要素は <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> 型 (T は <see cref="T:System.Double"/>) です。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.SpeedLimitList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SpeedLimitList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SpeedLimitList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SpeedLimitList"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.SpeedLimitList.CurrentLimit">
            <summary>
            現在の制限速度 [m/s] を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.TwoLeverCab">
            <summary>
            ツーハンドル式の運転台を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TwoLeverCab.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TwoLeverCab"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TwoLeverCab.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TwoLeverCab"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.OneLeverCab">
            <summary>
            ワンハンドル式の運転台を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.OneLeverCab.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.OneLeverCab"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.OneLeverCab.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.OneLeverCab"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.ReAdhesionControl">
            <summary>
            再粘着制御を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ReAdhesionControl.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ReAdhesionControl"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ReAdhesionControl.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ReAdhesionControl"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ReAdhesionControl.Mode">
            <summary>
            再粘着制御の動作状態を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ReAdhesionControl.IsEnabled">
            <summary>
            再粘着制御を使用するかどうかを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ReAdhesionControlMode">
            <summary>
            再粘着制御の動作状態を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReAdhesionControlMode.Disable">
            <summary>
            再粘着制御を動作させないことを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReAdhesionControlMode.Reduce">
            <summary>
            電流または圧力を引き下げることを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReAdhesionControlMode.Hold">
            <summary>
            低い電流または圧力のまま維持することを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.ReAdhesionControlMode.Return">
            <summary>
            引き下げた電流または圧力を元に戻すことを指定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.StationText">
            <summary>
            「次駅情報」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StationText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.StationText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StationText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.StationText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.SpeedLimitText">
            <summary>
            「制限速度」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SpeedLimitText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SpeedLimitText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SpeedLimitText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SpeedLimitText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.GraphCurve">
            <summary>
            xy 平面上の、x 座標からそれに対応する y 座標を取得可能なグラフを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.GraphCurve.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.GraphCurve"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.GraphCurve.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.GraphCurve"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.GraphCurve.GetY(System.Double)">
            <summary>
            指定された x 座標におけるグラフの y 座標を求めます。
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.GraphCurvePoint">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.GraphCurve"/> で線形補間処理の基となる点を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.GraphCurvePoint.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.GraphCurvePoint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.GraphCurvePoint.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.GraphCurvePoint"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.GraphCurvePoint.#ctor(System.Double,System.Double)">
            <summary>
            座標を指定して、<see cref="T:BveTypes.ClassWrappers.GraphCurvePoint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="x">x 座標。</param>
            <param name="y">y 座標。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.GraphCurvePoint.X">
            <summary>
            x 座標を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.GraphCurvePoint.Y">
            <summary>
            y 座標を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.GeometryText">
            <summary>
            「曲線・勾配」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.GeometryText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.GeometryText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.GeometryText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.GeometryText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.LeverText">
            <summary>
            「ハンドル位置」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.LeverText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.LeverText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LeverText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.LeverText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.InstructionText">
            <summary>
            「運転指示」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.InstructionText.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.InstructionText"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.InstructionText.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.InstructionText"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.MyTrack">
            <summary>
            自軌道を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MyTrack.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MyTrack"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MyTrack.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MyTrack"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.MyTrack.Curves">
            <summary>
            緩和曲線および円曲線のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MyTrack.CurvePosts">
            <summary>
            円曲線の開始距離程と半径のペアを表す <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> (T は <see cref="T:System.Double"/>) のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MyTrack.Gradients">
            <summary>
            勾配の開始距離程とその値のペアを表す <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> (T は <see cref="T:System.Double"/>) のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MyTrack.Cants">
            <summary>
            カントのリストを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MyTrack.GetDirectionAt(System.Int32)">
            <summary>
            指定した距離程において自軌道が向いている方角を求めます。
            </summary>
            <param name="location">方角を求める距離程 [m]。</param>
            <returns>距離程 <paramref name="location"/> にて自軌道が向いている方角。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MyTrack.GetPosition(System.Double,System.Double)">
            <summary>
            指定した距離程を基点とした、目標距離程における自軌道の位置ベクトル [m] の差を求めます。
            </summary>
            <param name="locationTo">目標距離程 [m]。</param>
            <param name="locationFrom">基点とする距離程 [m]。</param>
            <returns>距離程 <paramref name="locationFrom"/> を基点とした、距離程 <paramref name="locationTo"/> における自軌道の位置ベクトル。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.MyTrack.GetTransform(System.Double,System.Double)">
            <summary>
            指定した距離程から目標距離程への自軌道の射影行列 [m] を求めます。
            </summary>
            <param name="locationTo">目標距離程 [m]。</param>
            <param name="locationFrom">基点とする距離程 [m]。</param>
            <returns>距離程 <paramref name="locationFrom"/> から距離程 <paramref name="locationTo"/> への自軌道の射影行列。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Passenger">
            <summary>
            自列車の乗客を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Passenger.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Passenger"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Passenger.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Passenger"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Passenger.State">
            <summary>
            停車場における乗降の進捗を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Passenger.Capacity">
            <summary>
            1 両当たりの定員を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Passenger.Count">
            <summary>
            現在の 1 両当たりの乗車人数を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Passenger.StationProcess">
            <summary>
            停車場における自列車の乗客の乗降の進捗を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Passenger.StationProcess.Ready">
            <summary>
            乗降が開始されていないことを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Passenger.StationProcess.Alighting">
            <summary>
            降車中であることを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Passenger.StationProcess.Boarding">
            <summary>
            乗車中であることを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Passenger.StationProcess.Completed">
            <summary>
            乗降が完了したことを指定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.SideDoorSet">
            <summary>
            自列車の特定側のドアのセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SideDoorSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SideDoorSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SideDoorSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SideDoorSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.SideDoorSet.StandardCloseTime">
            <summary>
            この側のドアが閉まるのに要する時間の基準 [ms] を取得・設定します。
            </summary>
            <remarks>
            標準では、これをランダムに 0.95 ～ 1.05 倍した値が各ドア (<see cref="P:BveTypes.ClassWrappers.SideDoorSet.CarDoors"/> プロパティの各要素) の <see cref="P:BveTypes.ClassWrappers.CarDoor.CloseTime"/> プロパティに設定されます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.SideDoorSet.CarDoors">
            <summary>
            車両単位のドアの一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SideDoorSet.IsOpen">
            <summary>
            この側のドアのうち、ひとつでも開いているものがあるかどうかを取得します。
            </summary>
            <seealso cref="P:BveTypes.ClassWrappers.DoorSet.AreAllClosed"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.SideDoorSet.SetCarLength(System.Int32)">
            <summary>
            両数を指定して <see cref="P:BveTypes.ClassWrappers.SideDoorSet.CarDoors"/> プロパティを初期化します。
            </summary>
            <param name="length">両数。</param>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetCarLength(System.Int32)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.SideDoorSet.SetState(BveTypes.ClassWrappers.DoorState)">
            <summary>
            この側の全てのドアの開閉状態を変更します。
            </summary>
            <param name="state">指定する開閉状態。</param>
            <remarks>
            このメソッドを直接実行すると、本来開閉状態を変更した時に発生する一部のイベントが発生しません。通常は <see cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.SideDoorSet.OpenDoors"/>
            <seealso cref="M:BveTypes.ClassWrappers.SideDoorSet.CloseDoors(System.Int32)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.SideDoorSet.OpenDoors">
            <summary>
            この側の全てのドアを開けます。
            </summary>
            <remarks>
            開閉時の演出を伴わずに状態を変更したい場合は <see cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.SideDoorSet.CloseDoors(System.Int32)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.SideDoorSet.CloseDoors(System.Int32)">
            <summary>
            この側の全てのドアを閉めます。
            </summary>
            <remarks>
            開閉時の演出を伴わずに状態を変更したい場合は <see cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/> メソッドを使用してください。
            </remarks>
            <param name="maxStuckTime">
            旅客がこの側のドアに挟まる時間の最大値 [ms]。<br/>
            実際に使用される値は、この値に 0 以上 1 未満の同じ乱数を 2 回掛けたものです。乱数は各ドア (<see cref="P:BveTypes.ClassWrappers.SideDoorSet.CarDoors"/> プロパティの各要素) ごとに計算されます。
            </param>
            <seealso cref="M:BveTypes.ClassWrappers.DoorSet.SetState(BveTypes.ClassWrappers.DoorState,BveTypes.ClassWrappers.DoorState)"/>
            <seealso cref="M:BveTypes.ClassWrappers.SideDoorSet.OpenDoors"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.SixDof">
            <summary>
            6DoF (3 次元における剛体の運動の自由度) を表します。
            </summary>
            <remarks>
            このクラスのオリジナル型は構造体であることに注意してください。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.SixDof.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SixDof"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SixDof.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SixDof"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.SixDof.op_Addition(BveTypes.ClassWrappers.SixDof,BveTypes.ClassWrappers.SixDof)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.SixDof"/> 同士の加算を行います。
            </summary>
            <param name="x">左辺。</param>
            <param name="y">右辺。</param>
            <returns><paramref name="x"/> と <paramref name="y"/> の和。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.SixDof.op_Multiply(System.Double,BveTypes.ClassWrappers.SixDof)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.SixDof"/> を実数倍します。
            </summary>
            <param name="x">かける数。</param>
            <param name="y">元となる <see cref="T:BveTypes.ClassWrappers.SixDof"/>。</param>
            <returns><paramref name="y"/> を <paramref name="x"/> 倍した値。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.SixDof.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            座標、回転を指定して <see cref="T:BveTypes.ClassWrappers.SixDof"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="x">X 座標。</param>
            <param name="y">Y 座標。</param>
            <param name="z">Z 座標。</param>
            <param name="rotationX">X 軸まわりの回転 (ピッチ)。</param>
            <param name="rotationY">Y 軸まわりの回転 (ヨー)。</param>
            <param name="rotationZ">Z 軸まわりの回転 (ロール)。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.SixDof.X">
            <summary>
            X 座標を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SixDof.Y">
            <summary>
            Y 座標を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SixDof.Z">
            <summary>
            Z 座標を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SixDof.RotationX">
            <summary>
            X 軸まわりの回転 (ピッチ) を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SixDof.RotationY">
            <summary>
            Y 軸まわりの回転 (ヨー) を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SixDof.RotationZ">
            <summary>
            Z 軸まわりの回転 (ロール) を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Sound">
            <summary>
            サウンドを表します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Sound.SoundPosition">
            <summary>
            サウンドの設置位置を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Sound.SoundPosition.Ground">
            <summary>
            サウンドを地上に設置することを指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.Sound.SoundPosition.Cab">
            <summary>
            サウンドを自列車の運転台上に設置することを指定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Sound"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Sound"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.#ctor(BveTypes.ClassWrappers.TimeManager,BveTypes.ClassWrappers.CameraLocation,SlimDX.DirectSound.SecondarySoundBuffer,System.Double,BveTypes.ClassWrappers.Sound.SoundPosition)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Sound"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="timeManager">時間に関する情報。</param>
            <param name="cameraLocation">カメラ (視点) の位置に関する情報。</param>
            <param name="buffer">サウンドバッファ。</param>
            <param name="minRadius">サウンドの視点までの最短距離 [m]。</param>
            <param name="position">サウンドの設置位置。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.#ctor(BveTypes.ClassWrappers.TimeManager,BveTypes.ClassWrappers.CameraLocation,SlimDX.DirectSound.SecondarySoundBuffer[],System.Double,BveTypes.ClassWrappers.Sound.SoundPosition)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Sound"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="timeManager">時間に関する情報。</param>
            <param name="cameraLocation">カメラ (視点) の位置に関する情報。</param>
            <param name="buffers">サウンドバッファの一覧。</param>
            <param name="minRadius">サウンドの視点までの最短距離 [m]。</param>
            <param name="position">サウンドの設置位置。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.PositionInBlock">
            <summary>
            現在自列車が走行しているマップ ブロックの原点に対する、この音声の再生位置の位置ベクトル [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.SpeedInBlock">
            <summary>
            現在自列車が走行しているマップ ブロックに対する、この音声の速度ベクトル [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.MinRadius">
            <summary>
            視点からの最小距離 [m] を取得・設定します。
            </summary>
            <remarks>
            この値は音量の計算に使用されます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.MaxFrequency">
            <summary>
            周波数の上限 [Hz] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.MinFrequency">
            <summary>
            周波数の下限 [Hz] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.Buffers">
            <summary>
            この音声の再生に使用するバッファの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Sound.CurrentBufferIndex">
            <summary>
            最後に再生したサウンドバッファの <see cref="P:BveTypes.ClassWrappers.Sound.Buffers"/> におけるインデックスを取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.Play(System.Double,System.Double,System.Int32)">
            <summary>
            音声を冒頭から再生します。
            </summary>
            <param name="volume">音声を再生する音量。</param>
            <param name="pitch">音声を再生するピッチ。</param>
            <param name="fadeTimeMilliseconds">音量のフェードインにかける時間 [ms]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.Play(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            音声を指定した位置から再生します。
            </summary>
            <param name="volume">音声を再生する音量。</param>
            <param name="pitch">音声を再生するピッチ。</param>
            <param name="fadeTimeMilliseconds">音量のフェードインにかける時間 [ms]。</param>
            <param name="playPositionBytes">音声の再生を開始する位置 [bytes]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.PlayLooping(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            音声をループ再生します。
            </summary>
            <param name="volume">音声を再生する音量。</param>
            <param name="pitch">音声を再生するピッチ。</param>
            <param name="fadeTimeMilliseconds">音量のフェードインにかける時間 [ms]。</param>
            <param name="playPositionBytes">音声の再生を開始する位置 [bytes]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.Stop(System.Int32)">
            <summary>
            音声の再生を停止します。
            </summary>
            <param name="fadeTimeMilliseconds">音量のフェードアウトにかける時間 [ms]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Sound.SetVolumeAndPitch(System.Double,System.Double)">
            <summary>
            音声を再生する音量とピッチを設定します。
            </summary>
            <param name="volume">音声を再生する音量。</param>
            <param name="pitch">音声を再生するピッチ。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.SoundSet">
            <summary>
            シナリオで使用するサウンドのセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SoundSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SoundSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SoundSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.SoundSet.Items">
            <summary>
            要素の一覧を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Spring">
            <summary>
            ばねのモデルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Spring.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Spring"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Spring.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Spring"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Spring.UpperPosition">
            <summary>
            ばね上端の位置 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Spring.UpperSpeed">
            <summary>
            ばね上端の速度 [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.SwayGauge">
            <summary>
            「乗客の揺れ」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SwayGauge.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SwayGauge"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SwayGauge.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SwayGauge"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Transform">
            <summary>
            変換行列を格納します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Transform.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Transform"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Transform.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Transform"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Transform.Matrix">
            <summary>
            変換行列を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleBogieWheel">
            <summary>
            台車の車輪 (軌道接触部) を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleBogieWheel.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleBogieWheel"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleBogieWheel.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleBogieWheel"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleBogieWheel.LocationInCar">
            <summary>
            自列車の進行方向を Z 軸正方向とした左手系における、この車輪の Z 座標 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleBogieWheel.X">
            <summary>
            自列車の進行方向を Z 軸正方向とした左手系における、この車輪の運動の X 成分 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleBogieWheel.Y">
            <summary>
            自列車の進行方向を Z 軸正方向とした左手系における、この車輪の運動の Y 成分 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleBogieWheel.RotationZ">
            <summary>
            自列車の進行方向を Z 軸正方向とした左手系における、この車輪の Z 軸まわりの回転運動 [rad] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleBogieWheel.PositionInBlock">
            <summary>
            現在自列車が走行しているマップ ブロックの原点に対する、この車輪の位置ベクトル [m] を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleBogieWheel.OnLocationChanged(BveTypes.ClassWrappers.VehicleBogieWheel,BveTypes.ClassWrappers.ValueEventArgs{System.Double})">
            <summary>
            自列車が移動したときに呼び出されます。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベントデータを格納している <see cref="T:BveTypes.ClassWrappers.ValueEventArgs`1"/> (T は <see cref="T:System.Double"/>)。<see cref="P:BveTypes.ClassWrappers.ValueEventArgs`1.Value"/> は自列車の走行距離程の変位 [m] です。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleElectricity">
            <summary>
            自列車の電気の系全体を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleElectricity.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleElectricity"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleElectricity.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleElectricity"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleElectricity.Performance">
            <summary>
            自列車の車両性能を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleElectricity.MotorState">
            <summary>
            自列車のモーターの状態を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleElectricity.RegenerationLimit">
            <summary>
            電気ブレーキを遮断する走行速度 [m/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleElectricity.PowerReAdhesion">
            <summary>
            自列車の主制御装置の空転・滑走再粘着制御機構を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleElectricity.JerkRegulator">
            <summary>
            自列車のジャーク制御機構を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleElectricity.SlipVelocityCoefficient">
            <summary>
            インバーター制御におけるトルク分電流とすべり速度の比を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ChartForm">
            <summary>
            「車両物理量」フォームを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ChartForm.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ChartForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ChartForm.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ChartForm"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.LoadingProgressForm">
            <summary>
            「シナリオを読み込んでいます...」フォームを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadingProgressForm.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.LoadingProgressForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadingProgressForm.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.LoadingProgressForm"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadingProgressForm.IsAborted">
            <summary>
            読込が中止されたかどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadingProgressForm.ErrorCount">
            <summary>
            表示されているエラーの件数を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadingProgressForm.Panel">
            <summary>
            フォームのレイアウトのための <see cref="T:System.Windows.Forms.Panel"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadingProgressForm.ProgressBar">
            <summary>
            プログレスバーを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadingProgressForm.ErrorListView">
            <summary>
            エラーの一覧を表示する <see cref="T:System.Windows.Forms.ListView"/> を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadingProgressForm.ThrowError(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            エラーをエラー一覧に追加します。
            </summary>
            <param name="text">エラーの内容を表すテキスト。</param>
            <param name="senderFileName">エラーの発生元となるファイルのファイル名。使用しない場合は <see cref="F:System.String.Empty"/> を指定します。</param>
            <param name="lineIndex">エラーの発生元となる行番号。使用しない場合は 0 を指定します。</param>
            <param name="charIndex">エラーの発生元となる列番号。使用しない場合は 0 を指定します。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadingProgressForm.ThrowError(BveTypes.ClassWrappers.LoadError)">
            <summary>
            エラーをエラー一覧に追加します。
            </summary>
            <param name="error">追加するエラー。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadingProgressForm.ThrowErrors(System.Collections.Generic.IEnumerable{BveTypes.ClassWrappers.LoadError})">
            <summary>
            複数のエラーをエラー一覧に追加します。
            </summary>
            <param name="errors">追加するエラー。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadingProgressForm.SetProgress(System.Double)">
            <summary>
            プログレスバーの値を更新します。
            </summary>
            <param name="progress">新しいプログレスバーの値 (0 ～ 1)。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.MainForm">
            <summary>
            メインのフォームを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MainForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MainForm"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.DirectSound">
            <summary>
            BVE が使用する DirectSound デバイスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.ScenarioSelectForm">
            <summary>
            「シナリオの選択」フォームを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.TimePosForm">
            <summary>
            「時刻と位置」フォームを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.ChartForm">
            <summary>
            「車両物理量」フォームを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.LoadingProgressForm">
            <summary>
            「シナリオを読み込んでいます...」フォームを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.Assistants">
            <summary>
            補助表示のセットを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.InputManager">
            <summary>
            キー入力を管理する <see cref="T:BveTypes.ClassWrappers.InputManager"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.CurrentScenario">
            <summary>
            現在のシナリオのインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.CurrentScenarioInfo">
            <summary>
            現在のシナリオの <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.Preferences">
            <summary>
            BVE の設定が格納された <see cref="T:Mackoy.Bvets.Preferences"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MainForm.ContextMenu">
            <summary>
            右クリックで表示されるショートカット メニューを取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.CreateDirectXDevices">
            <summary>
            シナリオを閉じます。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.OpenScenario(System.String)">
            <summary>
            シナリオを開き、読み込みます。既に開かれているシナリオがあれば閉じられます。
            </summary>
            <param name="scenarioFilePath">シナリオファイルのパス。<see langword="null"/> を指定すると、「シナリオの選択」フォームが表示されます。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.LoadScenario(BveTypes.ClassWrappers.ScenarioInfo,System.Boolean)">
            <summary>
            シナリオを読み込みます。
            </summary>
            <param name="scenarioInfo">シナリオを指定する <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/>。</param>
            <param name="skipReloadStructures">ストラクチャーの読込をスキップするかどうか。<see langword="true"/> を指定した場合、現時点で読み込まれているストラクチャーを流用します。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.UnloadScenario">
            <summary>
            シナリオを閉じます。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.Draw">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.OnDeviceLost">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.MainForm.OnDeviceReset">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.ScenarioSelectionForm">
            <summary>
            「シナリオの選択」フォームを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ScenarioSelectionForm.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ScenarioSelectionForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ScenarioSelectionForm.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ScenarioSelectionForm"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.TimePosForm">
            <summary>
            「時刻と位置」フォームを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimePosForm.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TimePosForm"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimePosForm.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TimePosForm"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimePosForm.SetScenario(BveTypes.ClassWrappers.Scenario)">
            <summary>
            指定したシナリオに基づいてダイヤグラムの表示を初期化します。
            </summary>
            <param name="scenario">シナリオを表す <see cref="T:BveTypes.ClassWrappers.Scenario"/>。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimePosForm.Draw">
            <summary>
            ダイヤグラムを描画します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.HandleSet">
            <summary>
            操作可能なハンドルのセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.HandleSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.HandleSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.HandleSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.HandleSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.HandleSet.NotchInfo">
            <summary>
            ノッチの情報を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.HandleSet.BrakeNotch">
            <summary>
            ブレーキノッチを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.HandleSet.PowerNotch">
            <summary>
            力行ノッチを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.HandleSet.ReverserPosition">
            <summary>
            逆転器の位置を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.HandleSet.ConstantSpeedMode">
            <summary>
            定速制御の動作モードを取得・設定します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.HandleSet.BrakeChanged">
            <summary>
            ブレーキハンドルが扱われたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.HandleSet.BrakeChanged_Invoke(BveTypes.ClassWrappers.ValueEventArgs{System.Int32})">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.HandleSet.BrakeChanged"/> イベントを実行します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.HandleSet.PowerChanged">
            <summary>
            主ハンドルが扱われたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.HandleSet.PowerChanged_Invoke(BveTypes.ClassWrappers.ValueEventArgs{System.Int32})">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.HandleSet.PowerChanged"/> イベントを実行します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.HandleSet.ReverserChanged">
            <summary>
            レバーサーが扱われたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.HandleSet.ReverserChanged_Invoke(BveTypes.ClassWrappers.ValueEventArgs{System.Int32})">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.HandleSet.ReverserChanged"/> イベントを実行します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.HandleSet.ConstantSpeedChanged">
            <summary>
            定速制御モードが変更されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.HandleSet.ConstantSpeedChanged_Invoke">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.HandleSet.ConstantSpeedChanged"/> イベントを実行します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.InputManager">
            <summary>
            キー入力を管理します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.InputManager.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.InputManager"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.InputManager.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.InputManager"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.InputManager.InputDevices">
            <summary>
            読み込まれている入力デバイスプラグインを取得します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.InputManager.LeverMoved">
            <summary>
            運転台レバーが操作されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.InputManager.LeverMoved_Invoke(Mackoy.Bvets.InputEventArgs)">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.InputManager.LeverMoved"/> イベントを実行します。
            </summary>
            <param name="args">対象となるキーの情報。</param>
        </member>
        <member name="E:BveTypes.ClassWrappers.InputManager.KeyDown">
            <summary>
            キーが押されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.InputManager.KeyDown_Invoke(Mackoy.Bvets.InputEventArgs)">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.InputManager.KeyDown"/> イベントを実行します。
            </summary>
            <param name="args">対象となるキーの情報。</param>
        </member>
        <member name="E:BveTypes.ClassWrappers.InputManager.KeyUp">
            <summary>
            押されていたキーが離されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.InputManager.KeyUp_Invoke(Mackoy.Bvets.InputEventArgs)">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.InputManager.KeyUp"/> イベントを実行します。
            </summary>
            <param name="args">対象となるキーの情報。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.LoadError">
            <summary>
            シナリオの読込中に発生したエラーを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadError.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.LoadError"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadError.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.LoadError"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.LoadError.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            エラーの内容を指定して <see cref="T:BveTypes.ClassWrappers.LoadError"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="text">エラーの内容を表すテキスト。</param>
            <param name="senderFileName">エラーの発生元となるファイルのファイル名。使用しない場合は <see cref="F:System.String.Empty"/> を指定します。</param>
            <param name="lineIndex">エラーの発生元となる行番号。使用しない場合は 0 を指定します。</param>
            <param name="charIndex">エラーの発生元となる列番号。使用しない場合は 0 を指定します。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadError.Text">
            <summary>
            エラーの内容を表すテキストを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadError.SenderFileName">
            <summary>
            エラーの発生元となるファイルのファイル名を取得・設定します。
            </summary>
            <remarks>
            使用しない場合は <see cref="F:System.String.Empty"/> を指定します。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadError.LineIndex">
            <summary>
            エラーの発生元となる行番号を取得・設定します。
            </summary>
            <remarks>
            使用しない場合は 0 を指定します。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.LoadError.CharIndex">
            <summary>
            エラーの発生元となる列番号を取得・設定します。
            </summary>
            <remarks>
            使用しない場合は 0 を指定します。
            </remarks>
        </member>
        <member name="T:BveTypes.ClassWrappers.LocatableMapObject">
            <summary>
            基準となる距離程・軌道からの変位を指定するマップ オブジェクトを表します。
            </summary>
            <seealso cref="T:BveTypes.ClassWrappers.Structure"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableMapObject.#ctor(System.Object)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.LocatableMapObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableMapObject.#ctor(System.Double,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,BveTypes.ClassWrappers.TiltOptions,System.Double)">
            <summary>
            距離程、設置先の軌道、軌道からの変位、傾斜オプション、弦の長さを指定して <see cref="T:BveTypes.ClassWrappers.LocatableMapObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="x">軌道からの x 座標 [m]。</param>
            <param name="y">軌道からの y 座標 [m]。</param>
            <param name="z">軌道からの z 座標 [m]。</param>
            <param name="dx">軌道に対する x 軸回りの角 [deg]。</param>
            <param name="dy">軌道に対する y 軸回りの角 [deg]。</param>
            <param name="dz">軌道に対する z 軸回りの角 [deg]。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="span">曲線における弦の長さ [m]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableMapObject.#ctor(System.Double,System.String,BveTypes.ClassWrappers.TiltOptions,System.Double)">
            <summary>
            距離程、設置先の軌道、傾斜オプション、弦の長さを指定して <see cref="T:BveTypes.ClassWrappers.LocatableMapObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="span">曲線における弦の長さ [m]。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableMapObject.Matrix">
            <summary>
            軌道からの変位を表す <see cref="T:SlimDX.Matrix"/> を取得・設定します。<see cref="T:SlimDX.Matrix"/> の単位は [m] です。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableMapObject.TrackKey">
            <summary>
            設置先の軌道名を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableMapObject.Span">
            <summary>
            曲線における弦の長さ [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableMapObject.TiltsAlongCant">
            <summary>
            カントに連動して傾斜させるかどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableMapObject.TiltsAlongGradient">
            <summary>
            勾配に連動して傾斜させるかどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableMapObject.TiltOptions">
            <summary>
            マップ オブジェクトを傾斜させる方法を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.LocatableModel">
            <summary>
            設置位置の情報を伴う 3D モデルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableModel.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.LocatableModel"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableModel.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.LocatableModel"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableModel.#ctor(BveTypes.ClassWrappers.Model,SlimDX.Matrix,SlimDX.Vector3[])">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.LocatableModel"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="model">ソースとなる 3D モデル。</param>
            <param name="matrix">この 3D モデルを設置するための行列。</param>
            <param name="vertices">頂点の位置ベクトルの一覧。この値は Structure.PutBetween ステートメントによるストラクチャーを描画する際に使用されます。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableModel.Model">
            <summary>
            ソースとなる 3D モデルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableModel.Matrix">
            <summary>
            この 3D モデルを設置するための行列を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.LocatableModel.Vertices">
            <summary>
            頂点の位置ベクトルの一覧を取得・設定します。
            </summary>
            <remarks>
            この値は Structure.PutBetween ステートメントによるストラクチャーを描画する際に使用されます。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.LocatableModel.Draw(BveTypes.ClassWrappers.Direct3DProvider,SlimDX.Matrix,System.Boolean)">
            <summary>
            モデルを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="baseTransform"><see cref="P:BveTypes.ClassWrappers.LocatableModel.Matrix"/> に追加で掛ける、ベースの行列。</param>
            <param name="skipZWrite">深度バッファーへの書き込みをスキップするか。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.Tachogenerator">
            <summary>
            車輪の回転数から速度・加速度を測定する速度発電機を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Tachogenerator.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Tachogenerator"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Tachogenerator.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Tachogenerator"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Tachogenerator.Speed">
            <summary>
            速度 [m/s] を取得します。
            </summary>
            <remarks>
            速度の変更には <see cref="M:BveTypes.ClassWrappers.Tachogenerator.SetSpeed(System.Double)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="M:BveTypes.ClassWrappers.Tachogenerator.SetSpeed(System.Double)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Tachogenerator.SetSpeed(System.Double)">
            <summary>
            速度を設定します。
            </summary>
            <param name="speed">速度 [m/s]。</param>
            <remarks>
            速度の取得には <see cref="P:BveTypes.ClassWrappers.Tachogenerator.Speed"/> プロパティを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.Tachogenerator.Speed"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.LockoutValve">
            <summary>
            締切電磁弁式電空協調制御を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.LockoutValve.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.LockoutValve"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.LockoutValve.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.LockoutValve"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapFunctionList">
            <summary>
            自列車の通過を検知可能な <see cref="T:BveTypes.ClassWrappers.MapObjectBase"/> のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapFunctionList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapFunctionList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapFunctionList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapFunctionList"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapObjectBase">
            <summary>
            マップ上に設置されたすべてのオブジェクトの基本クラスを表します。
            </summary>
            <remarks>
            ストラクチャーに限らず、停車場や信号機、地上子など、ステートメントによって設置したすべてのオブジェクトを表します。
            </remarks>
            <seealso cref="T:BveTypes.ClassWrappers.MapObjectList"/>
            <seealso cref="T:BveTypes.ClassWrappers.LocatableMapObject"/>
            <seealso cref="T:BveTypes.ClassWrappers.PutBetweenStructure"/>
            <seealso cref="T:BveTypes.ClassWrappers.Station"/>
            <seealso cref="T:BveTypes.ClassWrappers.Structure"/>
            <seealso cref="T:BveTypes.ClassWrappers.ValueNode`1"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapObjectBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapObjectBase.Location">
            <summary>
            設置された距離程を取得・設定します。
            </summary>
            <remarks>
            マップ オブジェクトの種類によっては、この数値を変更しても BVE に反映されない場合があります。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectBase.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapObjectList">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.MapObjectBase"/> のリストを表します。
            </summary>
            <seealso cref="T:BveTypes.ClassWrappers.SingleStructureList"/>
            <seealso cref="T:BveTypes.ClassWrappers.StationList"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MapObjectList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MapObjectList"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.MapObjectList.CurrentIndex">
            <summary>
            この <see cref="T:BveTypes.ClassWrappers.MapObjectList"/> に関連付けられた現在のインデックスを取得・設定します。
            </summary>
            <remarks>
            通常、この <see cref="T:BveTypes.ClassWrappers.MapObjectList"/> において自列車の距離程に対応する値を示します。
            </remarks>
        </member>
        <member name="E:BveTypes.ClassWrappers.MapObjectList.ObjectPassed">
            <summary>
            <see cref="P:BveTypes.ClassWrappers.MapObjectList.CurrentIndex"/> の値が変更されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.ObjectPassed_Invoke(BveTypes.ClassWrappers.ObjectPassedEventArgs)">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.MapObjectList.ObjectPassed"/> イベントを実行します。
            </summary>
            <param name="args">自列車が通過したマップ オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.GoToAndGetCurrent(System.Double)">
            <summary>
            指定した距離程へ移動し、その距離程に対応するコレクションの要素を取得します。
            </summary>
            <param name="location">移動先の距離程 [m]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.Insert(BveTypes.ClassWrappers.MapObjectBase)">
            <summary>
            距離程順に新しい項目を追加します。
            </summary>
            <param name="item">追加するマップ オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.GoTo(System.Double)">
            <summary>
            指定した距離程へ移動します。
            </summary>
            <param name="newLocation">自列車の新たな距離程 [m]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.GoTo(System.Double,System.Double)">
            <summary>
            指定した距離程へ移動します。
            </summary>
            <param name="newLocation">自列車の新たな距離程 [m]。</param>
            <param name="displacement">自列車の移動した距離 [m]。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MapObjectList.GoToByIndex(System.Int32)">
            <summary>
            指定したインデックスへ移動します。
            </summary>
            <param name="index">移動先のインデックス。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.MapObjectList.ObjectPassedEventHandler">
            <summary>
            自列車がマップ オブジェクトを通過したときに発生するイベントを処理するメソッドを表します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベントデータを格納している <see cref="T:BveTypes.ClassWrappers.ObjectPassedEventArgs"/>。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.MaterialInfo">
            <summary>
            SlimDX で表示するための 2D および 3D モデルのマテリアル情報を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.MaterialInfo.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.MaterialInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.MaterialInfo.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.MaterialInfo"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.MaterialInfo.Material">
            <summary>
            マテリアルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MaterialInfo.Texture">
            <summary>
            <see cref="P:BveTypes.ClassWrappers.MaterialInfo.Material"/> に関連付けるテクスチャを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.MaterialInfo.Is2D">
            <summary>
            2D モデルであるか (Z 座標を使用しないかどうか) を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Model">
            <summary>
            Direct3D9 から表示可能な 3D モデルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Model"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Model"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.SetAlpha(System.Int32)">
            <summary>
            アルファ値を設定します。
            </summary>
            <param name="alpha">アルファ値 (0 ～ 255)。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.FromXFile(System.String)">
            <summary>
            指定した X ファイルからモデルを読み込みます。
            </summary>
            <param name="filePath">X ファイルのパス。</param>
            <returns>読み込まれたモデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/>。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.CreateRectangleWithTexture(System.Drawing.RectangleF,System.Single,System.Int32,System.String)">
            <summary>
            XY 平面に平行な、テクスチャが貼り付けられた長方形のモデルを作成します。
            </summary>
            <param name="rectangle">長方形のサイズ。</param>
            <param name="z">モデルの Z 座標。</param>
            <param name="transparentColor">透過色として使用する色を表す ARGB 値。<paramref name="texturePath"/> で指定するテクスチャが bmp 形式の場合のみ有効です。</param>
            <param name="texturePath">テクスチャファイルのパス。</param>
            <returns>読み込まれたモデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/>。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Model.Mesh">
            <summary>
            モデルを構成する <see cref="P:BveTypes.ClassWrappers.Model.Mesh"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Model.Materials">
            <summary>
            モデルのマテリアル情報の一覧を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Model.Draw(BveTypes.ClassWrappers.Direct3DProvider,System.Boolean)">
            <summary>
            モデルを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="skipZWrite">深度バッファーへの書き込みをスキップするか。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.NotchInfo">
            <summary>
            ノッチの情報を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.NotchInfo.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.NotchInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.NotchInfo.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.NotchInfo"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.PowerNotchCount">
            <summary>
            力行ノッチ数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.HoldingSpeedNotchCount">
            <summary>
            抑速ノッチ数を取得・設定します。
            </summary>
            <remarks>
            値は負で指定されます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.BrakeNotchCount">
            <summary>
            ブレーキノッチ数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.B67Notch">
            <summary>
            ブレーキ弁 67 度に相当するノッチを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.AtsCancelNotch">
            <summary>
            ATS 確認扱いで必要な最小ブレーキノッチを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.MotorBrakeNotch">
            <summary>
            電気ブレーキが立ち上がる最小ブレーキノッチを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.HasHoldingSpeedBrake">
            <summary>
            ブレーキノッチ 1 段目が抑速ブレーキかどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.EmergencyBrakeNotch">
            <summary>
            非常ブレーキに相当するノッチを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.NotchInfo.PrioritizeBrake">
            <summary>
            力行指令よりも電気ブレーキ指令を優先するかどうかを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ObjectDrawer">
            <summary>
            BVE によって読み込まれた全ての 3D モデルを描画するための機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectDrawer.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ObjectDrawer"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectDrawer.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ObjectDrawer"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ObjectDrawer.StructureDrawer">
            <summary>
            ストラクチャーを描画するための機能を提供する <see cref="T:BveTypes.ClassWrappers.StructureDrawer"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ObjectDrawer.DrawDistanceManager">
            <summary>
            ストラクチャーの描画範囲を算出するための機能を提供する <see cref="T:BveTypes.ClassWrappers.DrawDistanceManager"/> を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectDrawer.SetMap(BveTypes.ClassWrappers.Map)">
            <summary>
            処理対象となるマップを登録します。
            </summary>
            <param name="map">処理対象となるマップ。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectDrawer.Draw">
            <summary>
            3D モデル群を描画します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.ObjectPassedEventArgs">
            <summary>
            自列車がマップ オブジェクトを通過したときに発生するイベントのデータを提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectPassedEventArgs.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ObjectPassedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectPassedEventArgs.#ctor(System.Int32,BveTypes.ClassWrappers.MapObjectBase)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.ObjectPassedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="direction">通過方向。前方向の場合は 1、後方向の場合は -1 を指定してください。</param>
            <param name="mapObject">通過したマップオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ObjectPassedEventArgs.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ObjectPassedEventArgs"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ObjectPassedEventArgs.MapObject">
            <summary>
            通過したマップ オブジェクトを取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.AtsPlugin">
            <summary>
            ATS プラグインを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AtsPlugin"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.AtsPlugin"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.#ctor(BveTypes.ClassWrappers.VehicleLocation,BveTypes.ClassWrappers.InputManager,BveTypes.ClassWrappers.HandleSet,BveTypes.ClassWrappers.HandleSet,BveTypes.ClassWrappers.VehicleStateStore,BveTypes.ClassWrappers.SectionManager,BveTypes.ClassWrappers.MapFunctionList,BveTypes.ClassWrappers.DoorSet)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.AtsPlugin"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">自列車の位置情報。</param>
            <param name="inputManager">キー入力に関する情報。</param>
            <param name="handles">自列車のノッチ情報。</param>
            <param name="atsHandles">ATS による指示を適用した自列車のノッチ情報。</param>
            <param name="vehicleStateStore">自列車の状態に関する情報。</param>
            <param name="sectionManager">閉塞の制御に関する情報。</param>
            <param name="beacons">地上子の一覧。</param>
            <param name="doors">自列車のドアの一覧。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.IsPluginLoaded">
            <summary>
            自列車のハンドルのセットを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.HModule">
            <summary>
            ATS プラグインのモジュール (DLL) へのハンドルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.Handles">
            <summary>
            自列車のノッチ情報を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.PanelArray">
            <summary>
            パネルに渡す値の配列を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.SoundArray">
            <summary>
            サウンドの再生状態を表す値の配列を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.OldSoundArray">
            <summary>
            1 フレーム前におけるサウンドの再生状態を表す値の配列を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.Location">
            <summary>
            自列車の位置情報を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.StateStore">
            <summary>
            自列車の状態に関する情報を提供する <see cref="T:BveTypes.ClassWrappers.VehicleStateStore"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.SectionManager">
            <summary>
            閉塞を制御するための機能を提供する <see cref="T:BveTypes.ClassWrappers.SectionManager"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.Doors">
            <summary>
            自列車のドアのセットを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.AtsHandles">
            <summary>
            ATS による指示を適用した自列車のノッチ情報を取得・設定します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.AtsPlugin.LoopSoundRequested">
            <summary>
            ATS サウンドのループ再生が要求されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.LoopSoundRequested_Invoke(BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs)">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.AtsPlugin.LoopSoundRequested"/> イベントを実行します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.AtsPlugin.PlaySoundRequested">
            <summary>
            ATS サウンドの再生が要求されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.PlaySoundRequested_Invoke(BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs)">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.AtsPlugin.PlaySoundRequested"/> イベントを実行します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnSetBeaconData(System.Object,BveTypes.ClassWrappers.ObjectPassedEventArgs)">
            <summary>
            プラグインに地上子を越えたことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnKeyDown(System.Object,Mackoy.Bvets.InputEventArgs)">
            <summary>
            プラグインに ATS キー、または警笛キーが押されたことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnKeyUp(System.Object,Mackoy.Bvets.InputEventArgs)">
            <summary>
            プラグインに ATS キーが離されたことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnDoorStateChanged(System.Object,System.EventArgs)">
            <summary>
            プラグインに客室ドアの状態が変化したことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnSetSignal(System.Object,System.EventArgs)">
            <summary>
            プラグインに現在の閉塞の信号が変化したことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnSetReverser(System.Object,System.EventArgs)">
            <summary>
            プラグインにレバーサーが扱われたことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnSetBrake(System.Object,BveTypes.ClassWrappers.ValueEventArgs{System.Int32})">
            <summary>
            プラグインにブレーキが扱われたことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnSetPower(System.Object,BveTypes.ClassWrappers.ValueEventArgs{System.Int32})">
            <summary>
            プラグインに主ハンドルが扱われたことを通知します。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベント データを格納しているオブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.LoadLibrary(System.String)">
            <summary>
            ATS プラグインのライブラリ (DLL) を読み込みます。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnSetVehicleSpec(BveTypes.ClassWrappers.NotchInfo,System.Int32)">
            <summary>
            プラグインに車両スペックを設定します。
            </summary>
            <param name="notchInfo">ノッチの情報。</param>
            <param name="carCount">編成両数。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnInitialize(BveTypes.ClassWrappers.BrakePosition)">
            <summary>
            プラグインにゲームが開始されたことを通知します。
            </summary>
            <param name="brakePosition">ゲーム開始時のブレーキ弁の状態。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.OnElapse(System.Int32)">
            <summary>
            プラグインに 1 フレームが経過したことを通知します。
            </summary>
            <param name="time">現在時刻。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.AtsPlugin.PlaySoundRequested"/>、<see cref="E:BveTypes.ClassWrappers.AtsPlugin.LoopSoundRequested"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.ObjectPassedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="soundIndex">通過したマップオブジェクト。</param>
            <param name="volume">下げる音量の符号付き大きさ [B]。0 または負の値で指定してください。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs.SoundIndex">
            <summary>
            操作対象となる ATS サウンドのインデックスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.AtsPlugin.AtsSoundEventArgs.Volume">
            <summary>
            下げる音量の符号付き大きさ [B] を取得・設定します。
            </summary>
            <remarks>
            0 または負の値で指定してください。
            </remarks>
        </member>
        <member name="T:BveTypes.ClassWrappers.PreTrainObjectList">
            <summary>
            先行列車の通過時刻のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.PreTrainObjectList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.PreTrainObjectList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.PreTrainObjectList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.PreTrainObjectList"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.PreTrainObjectList.GetPreTrainLocation(System.Int32)">
            <summary>
            指定した時刻における先行列車の位置 [m] を取得します。
            </summary>
            <param name="timeMilliseconds">0 時丁度から指定する時刻までに経過したミリ秒数 [ms]。</param>
            <returns><paramref name="timeMilliseconds"/> における先行列車の位置 [m]。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.PreTrainObjectList.GetPreTrainLocation(System.TimeSpan)">
            <summary>
            指定した時刻における先行列車の位置 [m] を取得します。
            </summary>
            <param name="time">指定する時刻。</param>
            <returns><paramref name="time"/> における先行列車の位置 [m]。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.PutBetweenStructure">
            <summary>
            Structure[].PutBetween ステートメントで設置されたストラクチャーを表します。
            </summary>
            <seealso cref="T:BveTypes.ClassWrappers.StructureSet"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.PutBetweenStructure.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.PutBetweenStructure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.PutBetweenStructure.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.PutBetweenStructure"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.PutBetweenStructure.#ctor(System.Double,System.String,System.String,BveTypes.ClassWrappers.Model,System.Boolean)">
            <summary>
            距離程、設置位置の計算の基となる 2 軌道、モデル、変形方向を指定して <see cref="T:BveTypes.ClassWrappers.PutBetweenStructure"/> の新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey1">一方の軌道の軌道名。</param>
            <param name="trackKey2">他方の軌道の軌道名。</param>
            <param name="model">ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/>。</param>
            <param name="transformOnlyX">X 方向のみに変形するか。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.PutBetweenStructure.Model">
            <summary>
            ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.PutBetweenStructure.TrackKey1">
            <summary>
            一方の軌道の軌道名を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.PutBetweenStructure.TrackKey2">
            <summary>
            他方の軌道の軌道名を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.PutBetweenStructure.TransformOnlyX">
            <summary>
            X 方向のみに変形するかを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.RandomFileList">
            <summary>
            ランダムに 1 つの項目が選ばれる <see cref="T:BveTypes.ClassWrappers.BveFile"/> のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.RandomFileList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.RandomFileList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.RandomFileList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.RandomFileList"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.RandomFileList.SelectedFile">
            <summary>
            ランダムに選ばれた項目を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.RepeatedStructure">
            <summary>
            沿線ストラクチャーを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.RepeatedStructure.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.RepeatedStructure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.RepeatedStructure.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.RepeatedStructure"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.RepeatedStructure.#ctor(System.Double,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,BveTypes.ClassWrappers.TiltOptions,System.Double,System.Double,BveTypes.ClassWrappers.Extensions.WrappedList{BveTypes.ClassWrappers.Model})">
            <summary>
            距離程、設置先の軌道、軌道からの変位、傾斜オプション、弦の長さ、設置間隔、モデルを指定して <see cref="T:BveTypes.ClassWrappers.RepeatedStructure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="x">軌道からの x 座標 [m]。</param>
            <param name="y">軌道からの y 座標 [m]。</param>
            <param name="z">軌道からの z 座標 [m]。</param>
            <param name="dx">軌道に対する x 軸回りの角 [deg]。</param>
            <param name="dy">軌道に対する y 軸回りの角 [deg]。</param>
            <param name="dz">軌道に対する z 軸回りの角 [deg]。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="span">曲線における弦の長さ [m]。</param>
            <param name="interval">設置間隔 [m]。</param>
            <param name="models">ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> のリスト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.RepeatedStructure.#ctor(System.Double,System.String,BveTypes.ClassWrappers.TiltOptions,System.Double,System.Double,BveTypes.ClassWrappers.Extensions.WrappedList{BveTypes.ClassWrappers.Model})">
            <summary>
            距離程、設置先の軌道、傾斜オプション、弦の長さ、設置間隔、モデルを指定して <see cref="T:BveTypes.ClassWrappers.RepeatedStructure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="span">曲線における弦の長さ [m]。</param>
            <param name="interval">設置間隔 [m]。</param>
            <param name="models">ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> のリスト。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.RepeatedStructure.Models">
            <summary>
            ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> のリストを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.RepeatedStructure.Interval">
            <summary>
            設置間隔 [m] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Map">
            <summary>
            マップを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Map.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Map"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Map.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Map"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.DrawLimitLocation">
            <summary>
            ストラクチャーが設置される限界の距離程 [m] を取得・設定します。通常は最後の駅の 10km 先の位置になります。
            </summary>
            <remarks>
            この数値を変更しても BVE には反映されません。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.MyTrack">
            <summary>
            自軌道に関する情報を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Structures">
            <summary>
            Structure マップ要素、Repeater マップ要素で設置されたストラクチャーを取得します。
            </summary>
            <remarks>
            Structure.Load ステートメントから読み込まれたストラクチャーの 3D モデルのリストの取得には <see cref="P:BveTypes.ClassWrappers.Map.StructureModels"/> を使用してください。
            </remarks>
            <remarks>
            このクラスからストラクチャーを編集しても BVE には反映されません。ストラクチャーを動かしたい場合は他列車を使用してください。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.RollingNoiseObjects">
            <summary>
            設定した車輪転動音のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.FlangeNoiseObjects">
            <summary>
            設定したフランジきしり音のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.JointNoiseObjects">
            <summary>
            設定した分岐器通過音のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.CabIlluminanceObjects">
            <summary>
            設定した運転台の明るさのリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Stations">
            <summary>
            停車場のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Beacons">
            <summary>
            地上子のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.PreTrainObjects">
            <summary>
            先行列車の通過時刻のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Sections">
            <summary>
            閉塞の一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.SoundObjects">
            <summary>
            サウンド マップオブジェクトの一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Sound3DObjects">
            <summary>
            固定音源の一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.IrregularityObjects">
            <summary>
            設定した軌道変位のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Sounds">
            <summary>
            Sound.Load ステートメントから読み込まれたサウンドのリストを取得します。
            </summary>
            <remarks>
            Sound3D.Load ステートメントから読み込まれたサウンドのリストの取得には <see cref="P:BveTypes.ClassWrappers.Map.Sounds3D"/> プロパティを使用してください。
            </remarks>
            <value>キーがサウンド名、値がサウンドを表す <see cref="T:BveTypes.ClassWrappers.Sound"/> の <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2"/>。</value>
            <seealso cref="P:BveTypes.ClassWrappers.Map.Sounds3D"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.Sounds3D">
            <summary>
            Sound3D.Load ステートメントから読み込まれたサウンドのリストを取得します。
            </summary>
            <remarks>
            Sound.Load ステートメントから読み込まれたサウンドのリストの取得には <see cref="P:BveTypes.ClassWrappers.Map.Sounds"/> プロパティを使用してください。
            </remarks>
            <value>キーがサウンド名、値がサウンドを表す <see cref="T:BveTypes.ClassWrappers.Sound"/> の <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2"/>。</value>
            <seealso cref="P:BveTypes.ClassWrappers.Map.Sounds"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.StructureModels">
            <summary>
            Structure.Load ステートメントから読み込まれたストラクチャーの 3D モデルのリストを取得します。
            </summary>
            <remarks>
            設置されたストラクチャーのリストの取得には <see cref="P:BveTypes.ClassWrappers.Map.Structures"/> を使用してください。
            </remarks>
            <value>キーがストラクチャー名、値がストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> の <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2"/>。</value>
            <seealso cref="P:BveTypes.ClassWrappers.Map.Structures"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.SpeedLimits">
            <summary>
            速度制限のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.TrainInfos">
            <summary>
            他列車の情報のリストを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Map.DrawDistanceObjects">
            <summary>
            DrawDistance.Change ステートメントにより設置された、最長描画距離を指定するためのオブジェクトのリストを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Map.GetTrackMatrix(BveTypes.ClassWrappers.LocatableMapObject,System.Double,System.Double)">
            <summary>
            ストラクチャーを軌道上に配置するための行列を、設置先の距離程と基準点とする距離程を指定して計算します。
            </summary>
            <param name="mapObject">配置するストラクチャーを表す <see cref="T:BveTypes.ClassWrappers.LocatableMapObject"/>。</param>
            <param name="to">設置先の距離程 [m]。</param>
            <param name="from">基準点とする距離程 [m]。</param>
            <returns>ワールド変換行列を表す <see cref="T:SlimDX.Matrix"/>。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Scenario">
            <summary>
            シナリオ本体の詳細へアクセスするための機能を提供します。
            </summary>
            <remarks>
            読み込まれたファイルに関する情報にアクセスするには <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/> を使用してください。
            </remarks>
            <seealso cref="T:BveTypes.ClassWrappers.ScenarioInfo"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Scenario.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Scenario"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Scenario.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Scenario"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.TimeManager">
            <summary>
            このシナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.TimeManager"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.VehicleLocation">
            <summary>
            このシナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.VehicleLocation"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.Map">
            <summary>
            このシナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.Map"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.Vehicle">
            <summary>
            このシナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.Vehicle"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.Trains">
            <summary>
            他列車の一覧を取得します。
            </summary>
            <remarks>キーはマップファイル内で定義した他列車名、値は他列車を表す <see cref="T:BveTypes.ClassWrappers.Train"/> です。</remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.SectionManager">
            <summary>
            このシナリオに関連付けられた <see cref="P:BveTypes.ClassWrappers.Scenario.SectionManager"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.TimeTable">
            <summary>
            このシナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.TimeTable"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Scenario.ObjectDrawer">
            <summary>
            このシナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.ObjectDrawer"/> のインスタンスを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Scenario.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Scenario.InitializeTimeAndLocation(System.Double,System.Int32)">
            <summary>
            現在の時刻と自列車の位置を初期化します。
            </summary>
            <param name="location">自列車の距離程 [m]。</param>
            <param name="timeMilliseconds">時刻。0 時丁度から経過した時間 [ms] で指定します。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Scenario.Initialize(System.Int32)">
            <summary>
            走行中である停車場間の情報を初期化します。
            </summary>
            <param name="stationIndex">停車場のインデックス。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Scenario.Draw(BveTypes.ClassWrappers.Direct3DProvider)">
            <summary>
            ストラクチャーと運転台パネルを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.ScenarioInfo">
            <summary>
            シナリオファイルから読み込んだ情報にアクセスするための機能を提供します。
            </summary>
            <remarks>
            シナリオ本体の詳細へアクセスするには <see cref="T:BveTypes.ClassWrappers.Scenario"/> を使用してください。
            </remarks>
            <seealso cref="T:BveTypes.ClassWrappers.Scenario"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.ScenarioInfo.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ScenarioInfo.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.ScenarioInfo.FromFile(System.String)">
            <summary>
            読み込むシナリオファイルを指定して <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/> クラスのインスタンスを生成します。
            </summary>
            <param name="path">読み込むシナリオファイルのパス。</param>
            <returns>シナリオファイルから読み込んだ情報を表す <see cref="T:BveTypes.ClassWrappers.ScenarioInfo"/>。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.Path">
            <summary>
            シナリオファイルのパスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.FileName">
            <summary>
            シナリオファイルのファイル名を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.DirectoryName">
            <summary>
            シナリオファイルのディレクトリ情報を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.Title">
            <summary>
            シナリオのタイトルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.ImagePath">
            <summary>
            シナリオのサムネイル画像のパスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.Author">
            <summary>
            シナリオの作者を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.Comment">
            <summary>
            シナリオの説明を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.RouteFiles">
            <summary>
            選択されうるマップファイルのリストを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.VehicleFiles">
            <summary>
            選択されうる車両ファイルのリストを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.RouteTitle">
            <summary>
            路線名を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.VehicleTitle">
            <summary>
            車両名を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.ScenarioInfo.ScenarioFileLoadErrors">
            <summary>
            シナリオファイルの読込時に発生した、継続不能となる深刻なエラーを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Section">
            <summary>
            閉塞を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Section.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Section"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Section.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Section"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Section.SectionIndexesTrainOn">
            <summary>
            列車 (自列車・先行列車) が走行している閉塞のインデックスの一覧を取得・設定します。
            </summary>
            <remarks>
            要素は昇順にソートされています。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Section.CurrentSignalIndex">
            <summary>
            現在の信号現示のインデックスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Section.SignalIndexes">
            <summary>
            信号現示インデックスの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Section.SectionCount">
            <summary>
            閉塞の総数を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.SectionManager">
            <summary>
            閉塞を制御するための機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SectionManager.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SectionManager"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SectionManager.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SectionManager"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.Sections">
            <summary>
            閉塞の一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.CurrentSectionSignalIndex">
            <summary>
            現在の閉塞における信号インデックスを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.CurrentSectionSpeedLimit">
            <summary>
            現在の閉塞における、信号による制限速度 [m/s] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.ForwardSectionSpeedLimit">
            <summary>
            次の閉塞における、信号による制限速度 [m/s] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.LastSection">
            <summary>
            最後の閉塞を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.TimeManager">
            <summary>
            閉塞の制御に使用する <see cref="T:BveTypes.ClassWrappers.TimeManager"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.PreTrainPassObjects">
            <summary>
            先行列車の走行位置を定義している PreTrain.Pass ステートメントの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.PreTrainSectionIndex">
            <summary>
            先行列車が走行している閉塞のインデックスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.StopSignalSectionIndexes">
            <summary>
            停止現示の基となっている閉塞のインデックスの一覧を取得・設定します。
            </summary>
            <remarks>
            <list type="bullet">
            <item>signalFlag に 1 が設定されている閉塞のうち、自列車より前方にあって、かつ自列車からみて最も近いもの</item>
            <item>先行列車が走行している閉塞</item>
            </list>
            これらの閉塞のインデックスを手前から順に並べたものです。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.SectionManager.PreTrainLocation">
            <summary>
            先行列車が走行している距離程 [m] を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SectionManager.OnSectionChanged">
            <summary>
            自列車または先行列車の走行している閉塞が変更されたときに呼び出されます。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SectionManager.OnSignalChanged">
            <summary>
            各閉塞の信号現示が変更されたとき、または走行している閉塞が変更されたときに呼び出されます。
            </summary>
            <remarks>
            各閉塞の信号現示を取得するには <see cref="P:BveTypes.ClassWrappers.Section.CurrentSignalIndex"/> プロパティを使用してください。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.SectionManager.UpdatePreTrainSection">
            <summary>
            先行列車が走行している閉塞を最新の状態に更新します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.SingleStructureList">
            <summary>
            単独で設置された <see cref="T:BveTypes.ClassWrappers.Structure"/> のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.SingleStructureList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.SingleStructureList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.SingleStructureList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.SingleStructureList"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Smee">
            <summary>
            電磁直通空気ブレーキを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Smee.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Smee"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Smee.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Smee"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.Smee.BpInitialPressure">
            <summary>
            ブレーキ緩解時のブレーキ管圧力 [Pa] を取得・設定します。
            </summary>
            <remarks>
            電磁直通空気ブレーキおよび自動空気ブレーキの場合に限り認識されます。
            </remarks>
        </member>
        <member name="T:BveTypes.ClassWrappers.Station">
            <summary>
            停車場を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Station.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Station"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Station.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Station"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Station.#ctor(System.String)">
            <summary>
            停車場の名前を指定して <see cref="T:BveTypes.ClassWrappers.Station"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            <paramref name="name"/> には BVE 上に表示される名前を指定します。停車場名 (停車場リストファイルで定義した文字列) とは異なります。
            </remarks>
            <param name="name">停車場の名前。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.Name">
            <summary>
            停車場の名前を取得・設定します。
            </summary>
            <remarks>
            BVE 上に表示される名前です。停車場名 (停車場リストファイルで定義した文字列) とは異なります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.ArrivalTimeMilliseconds">
            <summary>
            到着時刻をミリ秒単位で取得・設定します。
            </summary>
            <value>0 時丁度から到着時刻までに経過したミリ秒数 [ms]。</value>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.ArrivalTime">
            <summary>
            到着時刻を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DepartureTimeMilliseconds">
            <summary>
            発車時刻または通過時刻をミリ秒単位で取得・設定します。
            </summary>
            <value>0 時丁度から発車時刻または通過時刻までに経過したミリ秒数 [ms]。</value>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DepartureTime">
            <summary>
            発車時刻または通過時刻を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DoorCloseTimeMilliseconds">
            <summary>
            ドアが閉まるのに要する時間をミリ秒単位で取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DoorCloseTime">
            <summary>
            ドアが閉まるのに要する時間を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DefaultTimeMilliseconds">
            <summary>
            駅にジャンプしたときの時刻をミリ秒単位で取得・設定します。
            </summary>
            <value>0 時丁度から駅にジャンプしたときの時刻までに経過したミリ秒数 [ms]。</value>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DefaultTime">
            <summary>
            駅にジャンプしたときの時刻を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.Pass">
            <summary>
            この停車場を通過するかどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.IsTerminal">
            <summary>
            この停車場が終点かどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.StoppageTimeMilliseconds">
            <summary>
            標準停車時間をミリ秒単位で取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.StoppageTime">
            <summary>
            標準停車時間を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DoorSideNumber">
            <summary>
            開くドアの方向を表す整数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DoorSide">
            <summary>
            開くドアの方向を <see cref="T:BveTypes.ClassWrappers.DoorSide"/>? 型で取得・設定します。
            </summary>
            <remarks>
            どちら側のドアも開かないことを表すには <see langword="null"/> を使用します。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DepartureSound">
            <summary>
            <see cref="P:BveTypes.ClassWrappers.Station.DepartureTime"/> の <see cref="P:BveTypes.ClassWrappers.Station.StoppageTime"/> 前の時刻に再生されるサウンドを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.ArrivalSound">
            <summary>
            ドアが開いたときに再生されるサウンドを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.SignalFlag">
            <summary>
            <see cref="P:BveTypes.ClassWrappers.Station.DepartureTime"/> の <see cref="P:BveTypes.ClassWrappers.Station.StoppageTime"/> 前の時刻まで出発信号が停止を現示するかどうかを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.MarginMax">
            <summary>
            停止位置誤差の前方許容範囲 [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.MarginMin">
            <summary>
            停止位置誤差の後方許容範囲 [m] を負の値で取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.MinStopPosition">
            <summary>
            停止位置誤差の下限の距離程 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.MaxStopPosition">
            <summary>
            停止位置誤差の上限の距離程 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.AlightingTimeMilliseconds">
            <summary>
            降車時間をミリ秒単位で取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.AlightingTime">
            <summary>
            降車時間を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.TargetLoadFactor">
            <summary>
            出発時の乗車率を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.CurrentLoadFactor">
            <summary>
            到着時の乗車率を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.DoorReopen">
            <summary>
            ドアが再開閉される確率を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.StuckInDoorMilliseconds">
            <summary>
            旅客がドアに挟まる時間をミリ秒単位で取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Station.StuckInDoor">
            <summary>
            旅客がドアに挟まる時間を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.StationList">
            <summary>
            停車場のリストを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StationList.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.StationList"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StationList.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.StationList"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.StationList.Insert(BveTypes.ClassWrappers.Station)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.StationList"/> に項目を追加します。
            </summary>
            <param name="item"><see cref="T:BveTypes.ClassWrappers.StationList"/> に追加するオブジェクト。</param>
            <exception cref="T:System.NotSupportedException">BVE がダイヤグラムを正常に描画できなくなるため、最初の駅と最後の駅の距離程を同一にすることはできません。</exception>
        </member>
        <member name="M:BveTypes.ClassWrappers.StationList.GetStandardTime(System.Double)">
            <summary>
            指定した距離程における標準通過時刻を停車場の発着時刻から計算します。
            </summary>
            <param name="location">指定する距離程 [m]。</param>
            <returns>0 時丁度から現在時刻までに経過したミリ秒数 [ms]。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.StructureBlock">
            <summary>
            設置距離程 25m おきにストラクチャーをグルーピングしたブロックを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureBlock.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.StructureBlock"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureBlock.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.StructureBlock"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureBlock.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.StructureBlock"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureBlock.Direction">
            <summary>
            このストラクチャーブロックの原点において、自軌道が向いている方角 [rad] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureBlock.Models">
            <summary>
            このストラクチャーブロックに配置されている 3D モデルの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureBlock.WorldMatrix">
            <summary>
            このストラクチャーブロックを配置するためのワールド変換行列を取得・設定します。
            </summary>
            <remarks>
            プロパティの値は、このストラクチャーブロックが描画範囲内にあるときに限って更新されます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureBlock.TransformFromLastBlock">
            <summary>
            1 つ前のストラクチャーブロックから見たときの、このストラクチャーブロックの相対位置を表すワールド変換行列を取得・設定します。<br/>
            1 つ前のストラクチャーブロック、このストラクチャーブロックの <see cref="P:BveTypes.ClassWrappers.StructureBlock.WorldMatrix"/> をそれぞれ M1、M2 とすると、プロパティの値は M2 = M1 * ΔM を満たす ΔM に当たります。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureBlock.Draw(BveTypes.ClassWrappers.Direct3DProvider,SlimDX.Matrix,System.Boolean)">
            <summary>
            描画範囲内のストラクチャーを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="view">ビュー変換行列。</param>
            <param name="skipZWrite">深度バッファーへの書き込みをスキップするか。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.StructureDrawer">
            <summary>
            ストラクチャーを描画するための機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureDrawer.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.StructureDrawer"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureDrawer.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.StructureDrawer"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureDrawer.Blocks">
            <summary>
            設置距離程 25m おきにストラクチャーをグルーピングしたブロックの一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureDrawer.MinDrawBlockIndex">
            <summary>
            描画範囲内にあるブロックのインデックスの下限を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureDrawer.MaxDrawBlockIndexPlus1">
            <summary>
            描画範囲内にあるブロックのインデックスの上限に 1 を足した値を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureDrawer.OnDrawLocationRangeUpdated(System.Object,System.EventArgs)">
            <summary>
            描画範囲の距離程の始・終点が変化したときに呼び出されます。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureDrawer.Draw(BveTypes.ClassWrappers.Direct3DProvider,SlimDX.Matrix)">
            <summary>
            描画範囲内のストラクチャーを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="view">ビュー変換行列。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.ValueNode`1">
            <summary>
            <typeparamref name="T"/> 型のデータが一つ記憶可能な <see cref="T:BveTypes.ClassWrappers.MapObjectBase"/> を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueNode`1.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueNode`1.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueNode`1.#ctor(System.Double,`0)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="value">格納するデータ。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.ValueNode`1.Value">
            <summary>
            この <see cref="T:BveTypes.ClassWrappers.ValueNode`1"/> が格納しているデータを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Structure">
            <summary>
            Structure[].Put ステートメント、Structure[].Put0 ステートメントで設置されたストラクチャーを表します。
            </summary>
            <seealso cref="T:BveTypes.ClassWrappers.StructureSet"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.Structure.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Structure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Structure.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Structure"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Structure.#ctor(System.Double,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,BveTypes.ClassWrappers.TiltOptions,System.Double,BveTypes.ClassWrappers.Model)">
            <summary>
            距離程、設置先の軌道、軌道からの変位、傾斜オプション、弦の長さ、モデルを指定して <see cref="T:BveTypes.ClassWrappers.Structure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="x">軌道からの x 座標 [m]。</param>
            <param name="y">軌道からの y 座標 [m]。</param>
            <param name="z">軌道からの z 座標 [m]。</param>
            <param name="dx">軌道に対する x 軸回りの角 [deg]。</param>
            <param name="dy">軌道に対する y 軸回りの角 [deg]。</param>
            <param name="dz">軌道に対する z 軸回りの角 [deg]。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="span">曲線における弦の長さ [m]。</param>
            <param name="model">ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/>。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Structure.#ctor(System.Double,System.String,BveTypes.ClassWrappers.TiltOptions,System.Double,BveTypes.ClassWrappers.Model)">
            <summary>
            距離程、設置先の軌道、傾斜オプション、弦の長さ、モデルを指定して <see cref="T:BveTypes.ClassWrappers.Structure"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="location">設置する距離程 [m]。</param>
            <param name="trackKey">設置先の軌道名。</param>
            <param name="tiltOptions">傾斜オプション。</param>
            <param name="span">曲線における弦の長さ [m]。</param>
            <param name="model">ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/>。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Structure.Model">
            <summary>
            ストラクチャーの 3D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.StructureSet">
            <summary>
            Structure マップ要素、Repeater マップ要素で設置されたストラクチャーの情報を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.StructureSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StructureSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.StructureSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureSet.DrawLimitLocation">
            <summary>
            ストラクチャーが設置される限界の距離程 [m] を取得・設定します。通常は最後の駅の 10km 先の位置になります。
            </summary>
            <remarks>
            この数値を変更しても BVE には反映されません。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureSet.Repeated">
            <summary>
            Repeater マップ要素で設置されたストラクチャーを取得します。
            </summary>
            <value>キーが RepeaterKey で指定した連続ストラクチャーー名、値が設置するストラクチャーのリストを表す <see cref="T:BveTypes.ClassWrappers.MapObjectList"/> の <see cref="T:BveTypes.ClassWrappers.Extensions.WrappedSortedList`2"/>。</value>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureSet.Put">
            <summary>
            Structure[].Put ステートメント、Structure[].Put0 ステートメントで設置されたストラクチャーを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureSet.PutBetween">
            <summary>
            Structure[].PutBetween ステートメントで設置されたストラクチャーを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.StructureSet.Signals">
            <summary>
            Signal[].Put ステートメントで設置された信号ストラクチャーを取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.TimeManager">
            <summary>
            時間に関する処理を行います。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeManager.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TimeManager"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeManager.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TimeManager"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeManager.State">
            <summary>
            時間進行の設定を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeManager.TimeMilliseconds">
            <summary>
            0 時丁度から現在までに経過した時間をミリ秒単位で取得します。
            </summary>
            <remarks>
            現在時刻の変更には <see cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.Int32)"/> メソッド、<see cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.TimeSpan)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeManager.Time"/>
            <seealso cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.Int32)"/>
            <seealso cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.TimeSpan)"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeManager.Time">
            <summary>
            0 時丁度から現在までに経過した時間を表す <see cref="T:System.TimeSpan"/> を取得します。
            </summary>
            <remarks>
            現在時刻の変更には <see cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.Int32)"/> メソッド、<see cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.TimeSpan)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeManager.TimeMilliseconds"/>
            <seealso cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.Int32)"/>
            <seealso cref="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.TimeSpan)"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.Int32)">
            <summary>
            現在時刻を変更します。
            </summary>
            <param name="timeMilliseconds">0 時丁度から現在までに経過したミリ秒数 [ms]。</param>
            <remarks>
            現在時刻の取得には <see cref="P:BveTypes.ClassWrappers.TimeManager.TimeMilliseconds"/> プロパティ、<see cref="P:BveTypes.ClassWrappers.TimeManager.Time"/> プロパティを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeManager.TimeMilliseconds"/>
            <seealso cref="P:BveTypes.ClassWrappers.TimeManager.Time"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeManager.SetTime(System.TimeSpan)">
            <summary>
            現在時刻を変更します。
            </summary>
            <param name="time">0 時丁度から現在までに経過した時間。</param>
            <remarks>
            現在時刻の取得には <see cref="P:BveTypes.ClassWrappers.TimeManager.TimeMilliseconds"/> プロパティ、<see cref="P:BveTypes.ClassWrappers.TimeManager.Time"/> プロパティを使用してください。
            </remarks>
            <see cref="P:BveTypes.ClassWrappers.TimeManager.TimeMilliseconds"/>
            <see cref="P:BveTypes.ClassWrappers.TimeManager.Time"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.TimeManager.GameState">
            <summary>
            ゲームの時間進行の設定を指定します。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.TimeManager.GameState.Forward">
            <summary>
            通常。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.TimeManager.GameState.Paused">
            <summary>
            ポーズ中。
            </summary>
        </member>
        <member name="F:BveTypes.ClassWrappers.TimeManager.GameState.FastForward">
            <summary>
            早送り。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.TimeTable">
            <summary>
            BVE 標準機能の時刻表を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeTable.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TimeTable"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeTable.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TimeTable"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.Model">
            <summary>
            時刻表を表示するための 2D モデルを表す <see cref="T:BveTypes.ClassWrappers.Model"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.NameTexts">
            <summary>
            表示する停車場名の配列を取得・設定します。
            </summary>
            <remarks>
            初めの見出し行 ("停車場名") も含まれます。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeTable.NameTextWidths"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.ArrivalTimeTexts">
            <summary>
            表示する到着時刻の配列を取得・設定します。
            </summary>
            <remarks>
            初めの見出し行 ("着") も含まれます。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeTable.ArrivalTimeTextWidths"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.DepartureTimeTexts">
            <summary>
            表示する発車時刻または通過時刻の配列を取得・設定します。
            </summary>
            <remarks>
            初めの見出し行 ("発(通)") も含まれます。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeTable.DepartureTimeTextWidths"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.NameTextWidths">
            <summary>
            停車場名の表示幅の配列を取得・設定します。ここで設定した数値を基に、列全体の幅が決定されます。
            </summary>
            <remarks>
            初めの見出し行 ("停車場名") も含まれます。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeTable.NameTexts"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.ArrivalTimeTextWidths">
            <summary>
            到着時刻の表示幅の配列を取得・設定します。ここで設定した数値を基に、列全体の幅が決定されます。
            </summary>
            <remarks>
            初めの見出し行 ("着") も含まれます。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeTable.ArrivalTimeTexts"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.TimeTable.DepartureTimeTextWidths">
            <summary>
            発車時刻または通過時刻の表示幅の配列を取得・設定します。ここで設定した数値を基に、列全体の幅が決定されます。
            </summary>
            <remarks>
            初めの見出し行 ("発(通)") も含まれます。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.TimeTable.DepartureTimeTexts"/>
        </member>
        <member name="M:BveTypes.ClassWrappers.TimeTable.Update">
            <summary>
            時刻表の表示を最新の状態に更新します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Train">
            <summary>
            他列車を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Train"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Train"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.#ctor(BveTypes.ClassWrappers.TimeManager,BveTypes.ClassWrappers.VehicleLocation,BveTypes.ClassWrappers.Map,BveTypes.ClassWrappers.TrainInfo,BveTypes.ClassWrappers.DrawDistanceManager)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Train"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="timeManager">使用する <see cref="T:BveTypes.ClassWrappers.TimeManager"/>。</param>
            <param name="location">自列車の位置情報。</param>
            <param name="map">現在読み込まれているマップを表す <see cref="T:BveTypes.ClassWrappers.Map"/>。</param>
            <param name="trainInfo">この他列車の追加情報を格納している <see cref="T:BveTypes.ClassWrappers.TrainInfo"/>。</param>
            <param name="drawDistanceManager">使用する <see cref="T:BveTypes.ClassWrappers.DrawDistanceManager"/>。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.VehicleLocation">
            <summary>
            自列車の位置情報を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.Map">
            <summary>
            マップを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.TrainInfo">
            <summary>
            この他列車の情報を提供する <see cref="T:BveTypes.ClassWrappers.TrainInfo"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.DrawDistanceManager">
            <summary>
            描画距離に関する情報を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.Schedules">
            <summary>
            この他列車の運行スケジュールの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.Location">
            <summary>
            この他列車の現在位置 [m] を取得・設定します。
            </summary>
            <remarks>
            距離程が正の方向を正とします。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.Speed">
            <summary>
            この他列車の速度 [m/s] を取得・設定します。
            </summary>
            <remarks>
            距離程が正の方向を正とします。<br/>
            この値は走行音のピッチの設定にのみ使用されます。車両ストラクチャーのアニメーションには <see cref="P:BveTypes.ClassWrappers.Train.Location"/> プロパティを使用してください。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.EnabledTimeMilliseconds">
            <summary>
            この他列車が実際に有効化された時刻をミリ秒単位で取得・設定します。
            </summary>
            <remarks>
            まだ有効化されていない場合は -1 を返します。既に有効化されているかどうかを取得するには <see cref="P:BveTypes.ClassWrappers.Train.IsEnabled"/> プロパティを使用してください。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.EnabledTime">
            <summary>
            この他列車が実際に有効化された時刻を取得・設定します。
            </summary>
            <remarks>
            まだ有効化されていない場合は -1 [ms] を返します。既に有効化されているかどうかを取得するには <see cref="P:BveTypes.ClassWrappers.Train.IsEnabled"/> プロパティを使用してください。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.IsEnabled">
            <summary>
            この他列車が既に有効化されているかどうかを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.ScheduleIndex">
            <summary>
            現在使用しているスケジュールの <see cref="P:BveTypes.ClassWrappers.Train.Schedules"/> プロパティにおけるインデックスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Train.ViewZ">
            <summary>
            運転士視点の Z 座標 [m] を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.Initialize">
            <summary>
            この他列車を初期化します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.DrawCars(BveTypes.ClassWrappers.Direct3DProvider,SlimDX.Matrix)">
            <summary>
            この他列車を構成する車両オブジェクトを描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="additionalWorldMatrix">ワールド変換行列の後に追加で掛ける行列。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.UpdateSound">
            <summary>
            この他列車に紐づいている音源の状態を更新します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.UpdateLocationAndSpeed">
            <summary>
            この他列車の位置と速度を更新します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Train.CompileToSchedules">
            <summary>
            <see cref="P:BveTypes.ClassWrappers.Train.TrainInfo"/> プロパティに設定された <see cref="T:BveTypes.ClassWrappers.TrainStopObject"/> のリストを <see cref="T:BveTypes.ClassWrappers.TrainSchedule"/> にコンパイルし、<see cref="P:BveTypes.ClassWrappers.Train.Schedules"/> プロパティへ格納します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.TrainInfo">
            <summary>
            他列車の情報を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainInfo.#ctor(System.Collections.IList)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.TrainInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainInfo.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.TrainInfo"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.TrainInfo.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.TrainInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.Structures">
            <summary>
            この他列車に紐づけるストラクチャーの一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.Sounds">
            <summary>
            この他列車に紐づける音源の一覧を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.Direction">
            <summary>
            この他列車の進行方向を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.TrackKey">
            <summary>
            この他列車が走行する軌道を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.EnableLocation">
            <summary>
            この他列車の動作を有効にする距離程 [m] を取得・設定します。
            </summary>
            <remarks>
            既定値は 0 です。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.EnableTimeMilliseconds">
            <summary>
            この他列車の動作を有効にする時刻をミリ秒単位で取得・設定します。
            </summary>
            <remarks>
            既定値は 0 です。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.TrainInfo.EnableTime">
            <summary>
            この他列車の動作を有効にする時刻を取得・設定します。
            </summary>
            <remarks>
            既定値は <see cref="F:System.TimeSpan.Zero"/> です。
            </remarks>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleFile">
            <summary>
            車両ファイルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleFile.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleFile"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleFile.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleFile"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.Path">
            <summary>
            このファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.ParametersPath">
            <summary>
            車両パラメーターファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.PerformanceCurvePath">
            <summary>
            車両性能ファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.AtsPluginPath">
            <summary>
            ATS プラグインファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.PanelPath">
            <summary>
            運転台パネルファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.SoundPath">
            <summary>
            車両サウンドファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleFile.MotorNoisePath">
            <summary>
            モーター音ファイルの絶対パスを取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleFile.FromFile(BveTypes.ClassWrappers.LoadingProgressForm,System.String)">
            <summary>
            車両ファイルを読み込みます。
            </summary>
            <param name="loadingProgressForm">「シナリオを読み込んでいます...」フォーム。</param>
            <param name="path">車両ファイルのパス。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleLocation">
            <summary>
            自列車の位置情報を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleLocation.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleLocation"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleLocation.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleLocation"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleLocation.Location">
            <summary>
            自車両の位置を取得します。
            </summary>
            <remarks>
            自車両の位置を設定するには <see cref="M:BveTypes.ClassWrappers.VehicleLocation.SetLocation(System.Double,System.Boolean)"/> メソッドを使用してください。
            </remarks>
            <seealso cref="M:BveTypes.ClassWrappers.VehicleLocation.SetLocation(System.Double,System.Boolean)"/>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleLocation.BlockIndex">
            <summary>
            現在の自車両の位置が含まれるストラクチャー描画ブロックのインデックスを取得します。
            </summary>
            <remarks>
            25m 毎に 1 つの描画ブロックが定義されており、全てのストラクチャーは設置された距離程が含まれるブロックに登録されます。<br/>
            各ストラクチャーが描画距離内に入っているかどうかを描画ブロック単位で判定することで、ストラクチャーの描画処理を高速化しています。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleLocation.SetLocation(System.Double,System.Boolean)">
            <summary>
            自車両の位置を設定します。
            </summary>
            <param name="location">設定する自車両の位置 [m]。</param>
            <param name="skipIfNoChange">指定された位置が現在と変わらない場合、処理をスキップするか。</param>
            <remarks>
            自車両の位置を取得するには <see cref="P:BveTypes.ClassWrappers.VehicleLocation.Location"/> プロパティを使用してください。
            </remarks>
            <seealso cref="P:BveTypes.ClassWrappers.VehicleLocation.Location"/>
        </member>
        <member name="T:BveTypes.ClassWrappers.ValueEventArgs`1">
            <summary>
            <typeparamref name="T"/> 型の値を伴う、イベントのデータを提供します。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueEventArgs`1.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.ValueEventArgs`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.ValueEventArgs`1.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.ValueEventArgs`1"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.ValueEventArgs`1.Value">
            <summary>
            格納されている値を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.Vehicle">
            <summary>
            自列車を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Vehicle.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Vehicle"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Vehicle.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Vehicle"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Vehicle.#ctor(BveTypes.ClassWrappers.AssistantSet,SlimDX.DirectSound.DirectSound,BveTypes.ClassWrappers.InputManager,BveTypes.ClassWrappers.TimeManager,BveTypes.ClassWrappers.VehicleLocation,BveTypes.ClassWrappers.CameraLocation,BveTypes.ClassWrappers.Map,BveTypes.ClassWrappers.SectionManager)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Vehicle"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="assistants">補助表示のセット。</param>
            <param name="directSound">DirectSound デバイス。</param>
            <param name="inputManager">キー入力を管理するための <see cref="T:BveTypes.ClassWrappers.InputManager"/>。</param>
            <param name="timeManager">時間に関する処理を行う <see cref="T:BveTypes.ClassWrappers.TimeManager"/>。</param>
            <param name="location">自列車の位置情報。</param>
            <param name="cameraLocation">カメラの位置に関する情報を提供する <see cref="P:BveTypes.ClassWrappers.Vehicle.CameraLocation"/>。</param>
            <param name="map">使用するマップ。</param>
            <param name="sectionManager">閉そくを制御するための <see cref="T:BveTypes.ClassWrappers.SectionManager" />。</param>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Instruments">
            <summary>
            自列車を構成する機器を表す <see cref="T:BveTypes.ClassWrappers.VehicleInstrumentSet"/> を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Vibration">
            <summary>
            自列車の揺れを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Panel">
            <summary>
            自列車の運転台パネルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Conductor">
            <summary>
            車掌を表す <see cref="P:BveTypes.ClassWrappers.Vehicle.Conductor"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Doors">
            <summary>
            自列車のドアのセットを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Dynamics">
            <summary>
            曲線抵抗の係数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.Passenger">
            <summary>
            自列車の乗客を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Vehicle.CameraLocation">
            <summary>
            カメラの位置に関する情報を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Vehicle.Load(BveTypes.ClassWrappers.LoadingProgressForm,BveTypes.ClassWrappers.VehicleFile)">
            <summary>
            自列車を読み込みます。
            </summary>
            <param name="loadingProgressForm">「シナリオを読み込んでいます...」フォーム。</param>
            <param name="vehicleFile">車両ファイル。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Vehicle.Initialize(BveTypes.ClassWrappers.BrakePosition)">
            <summary>
            自列車を初期化します。
            </summary>
            <param name="brakePosition">ブレーキハンドルの位置。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Vehicle.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleDynamics">
            <summary>
            自列車の力学系全体を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleDynamics.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleDynamics"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleDynamics.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleDynamics"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.CurveResistanceFactor">
            <summary>
            曲線抵抗の係数を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.RunningResistanceFactorA">
            <summary>
            速度の単位を [m/s] としたときの走行抵抗の係数 a を取得・設定します。
            </summary>
            <remarks>
            車両パラメーターファイルで定義する係数は速度の単位を [km/h] としたときのもののため、
            ここで取得・設定する値はその 3.6 ^ 2 = 12.96 倍となります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.RunningResistanceFactorB">
            <summary>
            速度の単位を [m/s] としたときの走行抵抗の係数 b を取得・設定します。
            </summary>
            <remarks>
            車両パラメーターファイルで定義する係数は速度の単位を [km/h] としたときのもののため、
            ここで取得・設定する値はその 3.6 倍となります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.RunningResistanceFactorC">
            <summary>
            走行抵抗の係数 c を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.CarLength">
            <summary>
            1 両当たりの長さ [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.TrailerCar">
            <summary>
            付随車の情報を提供する <see cref="T:BveTypes.ClassWrappers.CarInfo"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.MotorCar">
            <summary>
            動力車の情報を提供する <see cref="T:BveTypes.ClassWrappers.CarInfo"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleDynamics.FirstCar">
            <summary>
            先頭車両の情報を提供する <see cref="T:BveTypes.ClassWrappers.CarInfo"/> を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleInstrumentSet">
            <summary>
            自列車を構成する機器のセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleInstrumentSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleInstrumentSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleInstrumentSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleInstrumentSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleInstrumentSet.ConstantSpeedRelay">
            <summary>
            定速制御を行う <see cref="T:BveTypes.ClassWrappers.ConstantSpeedRelay"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleInstrumentSet.BrakeSystem">
            <summary>
            ブレーキシステム全体を表す <see cref="T:BveTypes.ClassWrappers.BrakeSystem"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleInstrumentSet.Electricity">
            <summary>
            電気の系全体を表す <see cref="T:BveTypes.ClassWrappers.VehicleElectricity"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleInstrumentSet.Cab">
            <summary>
            運転台のハンドルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleInstrumentSet.AtsPlugin">
            <summary>
            ATS プラグインを取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleMotorState">
            <summary>
            自列車のモーターの状態に関する情報を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleMotorState.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleMotorState"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleMotorState.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleMotorState"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleMotorState.CarForce">
            <summary>
            1 両当たりの引張力 [N] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleMotorState.Current">
            <summary>
            電流 [A] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleMotorState.TorqueCurrent">
            <summary>
            トルク分電流 [A] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehiclePanel">
            <summary>
            自列車の運転台パネルを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanel.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehiclePanel"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanel.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehiclePanel"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Perspective">
            <summary>
            Tilt キーを設定した計器のパース (遠近感) の強さを取得・設定します。
            </summary>
            <remarks>
            既定値は 1 です。値が大きいほどパースは弱くなります。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.DistanceFromDriver">
            <summary>
            運転士から運転台までの距離 [m] を取得・設定します。
            </summary>
            <remarks>
            既定では 0.8 で固定となっています。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.StateStore">
            <summary>
            自列車の状態に関する情報を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Border">
            <summary>
            視点移動で表示可能な限界を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Center">
            <summary>
            既定の視点において画面の中心になる座標を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Origin">
            <summary>
            消失点の座標を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Brightness">
            <summary>
            運転台の明るさを設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Resolution">
            <summary>
            ズーム 1 倍の時の X 解像度を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanel.Elements">
            <summary>
            計器要素の一覧を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanel.Draw">
            <summary>
            運転台パネルを描画します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanel.OnDeviceLost">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanel.OnDeviceReset">
            <inheritdoc/>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanel.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehiclePanelElement">
            <summary>
            自列車の運転台の、すべての計器要素の基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanelElement.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehiclePanelElement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanelElement.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。    
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehiclePanelElement"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanelElement.#ctor">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.VehiclePanelElement"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.Color">
            <summary>
            物体色を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.Layer">
            <summary>
            この計器要素の描画順序を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.Subject">
            <summary>
            表示する状態量を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.SubjectIndex">
            <summary>
            表示する状態量のインデックスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.ImageLocation">
            <summary>
            この計器要素の画像の描画位置を <see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.ImageRectangle"/> プロパティへ設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.ImageRectangle">
            <summary>
            この計器要素の画像の描画位置・サイズを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.Brightness">
            <summary>
            この計器要素の明るさを設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.DaytimeImageModel">
            <summary>
            昼間画像の 3D モデルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.DaytimeImagePath">
            <summary>
            昼間画像のパスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.NighttimeImageModel">
            <summary>
            夜間画像の 3D モデルを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.NighttimeImagePath">
            <summary>
            夜間画像のパスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePanelElement.Matrix">
            <summary>
            この計器要素の画像を配置するための変換行列を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanelElement.CreateModels">
            <summary>
            この計器要素の 3D モデルを作成し、描画位置を設定します。
            </summary>
            <remarks>
            既定では <see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.DaytimeImagePath"/>、<see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.NighttimeImagePath"/>、<see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.ImageRectangle"/> の値を参照し、
            結果を <see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.DaytimeImageModel"/>、<see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.NighttimeImageModel"/>、<see cref="P:BveTypes.ClassWrappers.VehiclePanelElement.Matrix"/> へ代入します。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanelElement.Draw(BveTypes.ClassWrappers.Direct3DProvider,SlimDX.Matrix)">
            <summary>
            この計器要素を描画します。
            </summary>
            <param name="direct3DProvider">描画に使用する <see cref="T:BveTypes.ClassWrappers.Direct3DProvider"/>。</param>
            <param name="world">ワールド変換行列。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePanelElement.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehiclePerformance">
            <summary>
            自列車の車両性能を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePerformance.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehiclePerformance"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePerformance.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehiclePerformance"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehiclePerformanceBase">
            <summary>
            自列車の車両性能の基本クラスを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePerformanceBase.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehiclePerformanceBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePerformanceBase.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehiclePerformanceBase"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePerformanceBase.Power">
            <summary>
            力行性能を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePerformanceBase.Brake">
            <summary>
            電気ブレーキ性能を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehiclePositioner">
            <summary>
            自列車をマップ上に配置するための機能を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePositioner.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehiclePositioner"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePositioner.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehiclePositioner"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePositioner.FrontBogie">
            <summary>
            前台車の車輪 (軌道接触部) に関する情報を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePositioner.RearBogie">
            <summary>
            後台車の車輪 (軌道接触部) に関する情報を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePositioner.HalfOfCarLength">
            <summary>
            車両長 [m] の半分、すなわち車両の先頭から中心までの距離を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePositioner.HalfOfBogieDistance">
            <summary>
            台車中心間距離 [m] の半分を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePositioner.BlockToCarCenterTransform">
            <summary>
            ワールド座標系を車両中心原点・車両前方を基準とした座標系に変換する行列を格納している <see cref="T:BveTypes.ClassWrappers.Transform"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehiclePositioner.PositionInBlock">
            <summary>
            現在自列車が走行しているマップ ブロックの原点に対する、車両中心の位置ベクトル [m] を取得・設定します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehiclePositioner.OnLocationChanged(BveTypes.ClassWrappers.VehiclePositioner,BveTypes.ClassWrappers.ValueEventArgs{System.Double})">
            <summary>
            自列車が移動したときに呼び出されます。
            </summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">イベントデータを格納している <see cref="T:BveTypes.ClassWrappers.ValueEventArgs`1"/> (T は <see cref="T:System.Double"/>)。<see cref="P:BveTypes.ClassWrappers.ValueEventArgs`1.Value"/> は自列車の走行距離程の変位 [m] です。</param>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleStateStore">
            <summary>
            自列車の状態に関する情報を提供します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStateStore.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleStateStore"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStateStore.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleStateStore"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.Speed">
            <summary>
            列車速度 [km/h] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.Current">
            <summary>
            電流 [A] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.BcPressure">
            <summary>
            ブレーキシリンダ圧力 [kPa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.MrPressure">
            <summary>
            元空気ダメ圧力 [kPa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.SapPressure">
            <summary>
            直通管圧力 [kPa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.BpPressure">
            <summary>
            ブレーキ管圧力 [kPa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.ErPressure">
            <summary>
            釣り合い空気ダメ圧力 [kPa] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStateStore.PanelArray">
            <summary>
            パネルに渡す値の配列を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleStep">
            <summary>
            自列車の制御段を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStep.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleStep"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStep.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleStep"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.Curves">
            <summary>
            テーブルの一覧を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.Force">
            <summary>
            空車時の引張力を指定する引張力テーブルを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.MaxForce">
            <summary>
            応荷重制御で増加できる最大の引張力を指定する引張力テーブルを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.Current">
            <summary>
            空車時の主電動機電流を指定する電流テーブルを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.MaxCurrent">
            <summary>
            応荷重制御で増加できる最大の主電動機電流を指定する電流テーブルを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.NoLoadCurrent">
            <summary>
            引張力が 0 となる主電動機電流を指定する電流テーブルを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.JerkRegulationUp">
            <summary>
            ジャーク制御の電流が増加する速さ [A/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.JerkRegulationDown">
            <summary>
            ジャーク制御の電流が減少する速さ [A/s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.BreakerDelayOn">
            <summary>
            断流器入時の遅れ時間 [s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.BreakerDelayOff">
            <summary>
            断流器切時の遅れ時間 [s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.ResetTime">
            <summary>
            断流器切後、入可能になるまでの時間 [s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.CurrentReducingTime">
            <summary>
            減流遮断における減流時間 [s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.RequiredNotchUp">
            <summary>
            力行または抑速時、次の段に進むために必要な最小のハンドル位置を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.RequiredNotchDown">
            <summary>
            力行または抑速時、前の段に戻るために必要な最大のハンドル位置を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.StopDelayUp">
            <summary>
            次の段に進むのに要する時間 [s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.StopDelayDown">
            <summary>
            前の段に進むのに要する時間 [s] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.CurrentLimitingValueEmpty">
            <summary>
            空車時における、次の段に進むことができる最大の電流 [A] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStep.CurrentLimitingValueFull">
            <summary>
            応荷重最大時における、次の段に進むことができる最大の電流 [A] を取得・設定します。
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleStepSet">
            <summary>
            自列車の制御段 (特性曲線) のセットを表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStepSet.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleStepSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStepSet.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleStepSet"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStepSet.StepCount">
            <summary>
            総制御段数を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStepSet.CurrentStepIndex">
            <summary>
            現在の制御段のインデックスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleStepSet.CurrentStep">
            <summary>
            現在の制御段 (特性曲線) を取得します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleStepSet.GetStep(System.Int32)">
            <summary>
            指定したインデックスの制御段 (特性曲線) を取得します。
            </summary>
            <param name="index">取得する制御段のインデックス。</param>
            <returns>インデックスが <paramref name="index"/> の制御段。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.VehicleVibration">
            <summary>
            自列車の揺れを制御します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleVibration.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.VehicleVibration"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleVibration.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.VehicleVibration"/> クラスのインスタンス。</returns>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.CarBodyTransform">
            <summary>
            車両中心原点・車両前方を基準とした座標系から運転士視点の座標系に変換する行列を格納している <see cref="T:BveTypes.ClassWrappers.Transform"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.FrontAccelerationX">
            <summary>
            見かけ上の前台車上左右加速度 [m/s^2] を取得・設定します。
            </summary>
            <remarks>
            遠心力・重力成分を含みます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.RearAccelerationX">
            <summary>
            見かけ上の後台車上左右加速度 [m/s^2] を取得・設定します。
            </summary>
            <remarks>
            遠心力・重力成分を含みます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.AccelerationZ">
            <summary>
            見かけ上の前後加速度 [m/s^2] を取得・設定します。
            </summary>
            <remarks>
            重力成分を含みます。
            </remarks>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.CarBodyAcceleration">
            <summary>
            車体の加速度 [m/s^2] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.CarBodyDisplacement">
            <summary>
            車体の変位 [m] を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.Positioner">
            <summary>
            自列車をマップ上に配置するための機能を提供する <see cref="T:BveTypes.ClassWrappers.VehiclePositioner"/> を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.SpringHeight">
            <summary>
            空気ばねの高さ [m] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.ViewPoint">
            <summary>
            運転士視点の位置を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.Passenger">
            <summary>
            自列車の乗客を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.VehicleVibration.VerticalSprings">
            <summary>
            空気ばねの縦 (Y) 方向モデルを取得・設定します。
            </summary>
            <remarks>
            右前、左前、右後、左後の順番で格納されています。
            </remarks>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleVibration.Tick(System.Double)">
            <summary>
            毎フレーム呼び出されます。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.VehicleVibration.UpdateCarBodyTransform">
            <summary>
            車両
            </summary>
        </member>
        <member name="T:BveTypes.ClassWrappers.StopPositionGauge">
            <summary>
            「停止位置」補助表示を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.StopPositionGauge.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.StopPositionGauge"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.StopPositionGauge.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.StopPositionGauge"/> クラスのインスタンス。</returns>
        </member>
        <member name="T:BveTypes.ClassWrappers.Conductor">
            <summary>
            車掌を表します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.#ctor(System.Object)">
            <summary>
            オリジナル オブジェクトから <see cref="T:BveTypes.ClassWrappers.Conductor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.FromSource(System.Object)">
            <summary>
            オリジナル オブジェクトからラッパーのインスタンスを生成します。
            </summary>
            <param name="src">ラップするオリジナル オブジェクト。</param>
            <returns>オリジナル オブジェクトをラップした <see cref="T:BveTypes.ClassWrappers.Conductor"/> クラスのインスタンス。</returns>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.#ctor(BveTypes.ClassWrappers.TimeManager,BveTypes.ClassWrappers.VehicleLocation,BveTypes.ClassWrappers.SoundSet,BveTypes.ClassWrappers.MapObjectList,BveTypes.ClassWrappers.SectionManager,BveTypes.ClassWrappers.DoorSet,BveTypes.ClassWrappers.Passenger)">
            <summary>
            <see cref="T:BveTypes.ClassWrappers.Conductor"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.TimeManager">
            <summary>
            シナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.TimeManager"/> のインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.Location">
            <summary>
            シナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.VehicleLocation"/> のインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.Sounds">
            <summary>
            シナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.SoundSet"/> のインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.Stations">
            <summary>
            停車場のリストを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.SectionManager">
            <summary>
            シナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.SectionManager"/> のインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.Doors">
            <summary>
            シナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.DoorSet"/> のインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.Passenger">
            <summary>
            シナリオに関連付けられた <see cref="T:BveTypes.ClassWrappers.Passenger"/> のインスタンスを取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.StoppedToDoorOpeningMilliseconds">
            <summary>
            停車場に停車してからドアを開くまでの時間 [ms] を取得・設定します。
            </summary>
        </member>
        <member name="P:BveTypes.ClassWrappers.Conductor.StoppedToDoorOpening">
            <summary>
            停車場に停車してからドアを開くまでの時間を取得・設定します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.Conductor.FixStopPositionRequested">
            <summary>
            停止位置の修正が要求されたときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.FixStopPositionRequested_Invoke">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.Conductor.FixStopPositionRequested"/> イベントを実行します。
            </summary>
        </member>
        <member name="E:BveTypes.ClassWrappers.Conductor.DepartureRequested">
            <summary>
            車側灯の滅灯を確認したとき、つまり全てのドアが閉まりきったときに発生します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.DepartureRequested_Invoke">
            <summary>
            <see cref="E:BveTypes.ClassWrappers.Conductor.DepartureRequested"/> イベントを実行します。
            </summary>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.OnJumped(System.Int32,System.Boolean)">
            <summary>
            このインスタンスに自列車がテレポートしたことを通知します。
            </summary>
            <param name="nextStationIndex">ジャンプ先の距離程における次駅のインデックス。</param>
            <param name="isDoorClosed">ドアが閉まっているかどうか。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.OnDoorStateChanged(System.Object,System.EventArgs)">
            <summary>
            このインスタンスにドアの状態が変更されたことを通知します。
            </summary>
            <param name="sender">通知元のインスタンス。</param>
            <param name="e">イベントデータを格納する <see cref="T:System.EventArgs"/>。</param>
        </member>
        <member name="M:BveTypes.ClassWrappers.Conductor.OnTick(System.Object,System.EventArgs)">
            <summary>
            このインスタンスに 1 フレームが経過したことを通知します。
            </summary>
            <param name="sender">通知元のインスタンス。</param>
            <param name="e">イベントデータを格納する <see cref="T:System.EventArgs"/>。</param>
        </member>
        <member name="T:BveTypes.ITwoWayConverter`2">
            <summary>
            双方向に型変換が可能なコンバーターを表します。
            </summary>
            <typeparam name="T1">変換元・先として使用する 1 つ目の型。</typeparam>
            <typeparam name="T2">変換元・先として使用する 2 つ目の型。</typeparam>
        </member>
        <member name="M:BveTypes.ITwoWayConverter`2.Convert(`0)">
            <summary>
            <typeparamref name="T1"/> 型のオブジェクトを <typeparamref name="T2"/> 型に変換します。
            </summary>
            <param name="value">変換するオブジェクト。</param>
            <returns>変換されたオブジェクト。</returns>
        </member>
        <member name="M:BveTypes.ITwoWayConverter`2.ConvertBack(`1)">
            <summary>
            <typeparamref name="T2"/> 型のオブジェクトを <typeparamref name="T1"/> 型に変換します。
            </summary>
            <param name="value">変換するオブジェクト。</param>
            <returns>変換されたオブジェクト。</returns>
        </member>
        <member name="T:BveTypes.DuplicatedLibraryException">
            <summary>
            同一ライブラリの複数バージョンが読み込まれたときにスローされる例外です。
            </summary>
        </member>
        <member name="P:BveTypes.DuplicatedLibraryException.AssemblyName">
            <summary>
            原因となっているアセンブリの名前を取得します。
            </summary>
        </member>
        <member name="P:BveTypes.DuplicatedLibraryException.Assemblies">
            <summary>
            原因となっているアセンブリの一覧を取得します。
            </summary>
        </member>
        <member name="T:BveTypes.DifferentVersionProfileLoadedEventArgs">
            <summary>
            <see cref="E:BveTypes.BveTypeSetFactory.DifferentVersionProfileLoaded"/> イベントの情報を提供します。
            </summary>
        </member>
        <member name="P:BveTypes.DifferentVersionProfileLoadedEventArgs.BveVersion">
            <summary>
            BVE 本体のバージョンを取得します。
            </summary>
        </member>
        <member name="P:BveTypes.DifferentVersionProfileLoadedEventArgs.ProfileVersion">
            <summary>
            代用されたプロファイルのバージョンを取得します。
            </summary>
        </member>
        <member name="M:BveTypes.DifferentVersionProfileLoadedEventArgs.#ctor(System.Version,System.Version)">
            <summary>
            <see cref="T:BveTypes.DifferentVersionProfileLoadedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="bveVersion">BVE 本体のバージョン。</param>
            <param name="profileVersion">代用されたプロファイルのバージョン。</param>
        </member>
    </members>
</doc>
